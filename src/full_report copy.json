{
  "stats": {
    "suites": 24,
    "tests": 155,
    "passes": 127,
    "pending": 0,
    "failures": 3,
    "start": "2022-07-12T08:11:30.500Z",
    "end": "2022-07-12T08:24:08.482Z",
    "duration": 723328,
    "testsRegistered": 155,
    "passPercent": 81.93548387096774,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 25,
    "hasSkipped": true
  },
  "results": [
    {
      "uuid": "fb3e7764-da56-4158-bd0d-fdc043c5d725",
      "title": "",
      "fullFile": "avaria/specs/avaria.spec.js",
      "file": "avaria/specs/avaria.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "dab0e618-84a0-4ee9-a05b-be144cf22743",
          "title": "AVARIA",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "deve listar todos os pagamentos",
              "fullTitle": "AVARIA deve listar todos os pagamentos",
              "timedOut": null,
              "duration": 105210,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.listaPagamentos(TokenIntApp).then(res => {\n  expect(res.body.Registros.length).to.exist;\n  expect(res.status).to.be.equal(200);\n});",
              "err": {
                "message": "CypressError: `cy.request()` failed on:\n\nhttps://api-int-hml.autoglass.com.br/vendas/api/int-app/avarias/pagamentos?qt=2\n\nThe response we received from your web server was:\n\n  > 502: Bad Gateway\n\nThis was considered a failure because the status code was not `2xx` or `3xx`.\n\nIf you do not want status codes to cause failures pass the option: `failOnStatusCode: false`\n\n-----------------------------------------------------------\n\nThe request we sent was:\n\nMethod: GET\nURL: https://api-int-hml.autoglass.com.br/vendas/api/int-app/avarias/pagamentos?qt=2\nHeaders: {\n  \"Connection\": \"keep-alive\",\n  \"Token_Autorizacao\": \"11abd58d-f5c7-41b0-8fb9-387874c59571\",\n  \"user-agent\": \"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Cypress/9.5.2 Chrome/94.0.4606.81 Electron/15.3.4 Safari/537.36\",\n  \"accept\": \"*/*\",\n  \"accept-encoding\": \"gzip, deflate\"\n}\n\n-----------------------------------------------------------\n\nThe response we got was:\n\nStatus: 502 - Bad Gateway\nHeaders: {\n  \"server\": \"nginx\",\n  \"date\": \"Tue, 12 Jul 2022 08:13:18 GMT\",\n  \"content-type\": \"text/html; charset=UTF-8\",\n  \"content-length\": \"552\",\n  \"connection\": \"keep-alive\"\n}\nBody: <html>\r\n<head><title>502 Bad Gateway</title></head>\r\n<body>\r\n<center><h1>502 Bad Gateway</h1></center>\r\n<hr><center>nginx</center>\r\n</body>\r\n</html>\r\n<!-- a padding to disable MSIE and Chrome friendly error page -->\r\n<!-- a padding to disable MSIE and Chrome friendly error page -->\r\n<!-- a padding to disable MSIE and Chrome friendly error page -->\r\n<!-- a padding to disable MSIE and Chrome friendly error page -->\r\n<!-- a padding to disable MSIE and Chrome friendly error page -->\r\n<!-- a padding to disable MSIE and Chrome friendly error page -->\r\n\nhttps://on.cypress.io/request",
                "estack": "CypressError: `cy.request()` failed on:\n\nhttps://api-int-hml.autoglass.com.br/vendas/api/int-app/avarias/pagamentos?qt=2\n\nThe response we received from your web server was:\n\n  > 502: Bad Gateway\n\nThis was considered a failure because the status code was not `2xx` or `3xx`.\n\nIf you do not want status codes to cause failures pass the option: `failOnStatusCode: false`\n\n-----------------------------------------------------------\n\nThe request we sent was:\n\nMethod: GET\nURL: https://api-int-hml.autoglass.com.br/vendas/api/int-app/avarias/pagamentos?qt=2\nHeaders: {\n  \"Connection\": \"keep-alive\",\n  \"Token_Autorizacao\": \"11abd58d-f5c7-41b0-8fb9-387874c59571\",\n  \"user-agent\": \"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Cypress/9.5.2 Chrome/94.0.4606.81 Electron/15.3.4 Safari/537.36\",\n  \"accept\": \"*/*\",\n  \"accept-encoding\": \"gzip, deflate\"\n}\n\n-----------------------------------------------------------\n\nThe response we got was:\n\nStatus: 502 - Bad Gateway\nHeaders: {\n  \"server\": \"nginx\",\n  \"date\": \"Tue, 12 Jul 2022 08:13:18 GMT\",\n  \"content-type\": \"text/html; charset=UTF-8\",\n  \"content-length\": \"552\",\n  \"connection\": \"keep-alive\"\n}\nBody: <html>\r\n<head><title>502 Bad Gateway</title></head>\r\n<body>\r\n<center><h1>502 Bad Gateway</h1></center>\r\n<hr><center>nginx</center>\r\n</body>\r\n</html>\r\n<!-- a padding to disable MSIE and Chrome friendly error page -->\r\n<!-- a padding to disable MSIE and Chrome friendly error page -->\r\n<!-- a padding to disable MSIE and Chrome friendly error page -->\r\n<!-- a padding to disable MSIE and Chrome friendly error page -->\r\n<!-- a padding to disable MSIE and Chrome friendly error page -->\r\n<!-- a padding to disable MSIE and Chrome friendly error page -->\r\n\nhttps://on.cypress.io/request\n    at https://api-int-hml.autoglass.com.br/__cypress/runner/cypress_runner.js:160659:80\n    at tryCatcher (https://api-int-hml.autoglass.com.br/__cypress/runner/cypress_runner.js:13022:23)\n    at Promise._settlePromiseFromHandler (https://api-int-hml.autoglass.com.br/__cypress/runner/cypress_runner.js:10957:31)\n    at Promise._settlePromise (https://api-int-hml.autoglass.com.br/__cypress/runner/cypress_runner.js:11014:18)\n    at Promise._settlePromise0 (https://api-int-hml.autoglass.com.br/__cypress/runner/cypress_runner.js:11059:10)\n    at Promise._settlePromises (https://api-int-hml.autoglass.com.br/__cypress/runner/cypress_runner.js:11139:18)\n    at _drainQueueStep (https://api-int-hml.autoglass.com.br/__cypress/runner/cypress_runner.js:7729:12)\n    at _drainQueue (https://api-int-hml.autoglass.com.br/__cypress/runner/cypress_runner.js:7722:9)\n    at Async.../../node_modules/bluebird/js/release/async.js.Async._drainQueues (https://api-int-hml.autoglass.com.br/__cypress/runner/cypress_runner.js:7738:5)\n    at Async.drainQueues (https://api-int-hml.autoglass.com.br/__cypress/runner/cypress_runner.js:7608:14)\nFrom Your Spec Code:\n    at Context.eval (https://api-int-hml.autoglass.com.br/__cypress/tests?p=index.js:2293:6)",
                "diff": null
              },
              "uuid": "0be35646-309e-4fd5-8c6b-6e77ed3958a0",
              "parentUUID": "dab0e618-84a0-4ee9-a05b-be144cf22743",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "deve listar situações das avarias",
              "fullTitle": "AVARIA deve listar situações das avarias",
              "timedOut": null,
              "duration": 132,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.listaSituacoesAvarias(TokenIntApp).then(res => {\n  expect(res.body.length).to.exist;\n  expect(res.body[0].Valor).to.exist;\n  expect(res.body[1].Valor).to.exist;\n  expect(res.status).to.be.equal(200);\n});",
              "err": {},
              "uuid": "5cf58f8c-b04d-477f-8dac-ee9c66e8744c",
              "parentUUID": "dab0e618-84a0-4ee9-a05b-be144cf22743",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "deve recuperar o texto para email de indenização",
              "fullTitle": "AVARIA deve recuperar o texto para email de indenização",
              "timedOut": null,
              "duration": 178,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.recuperaTextoEmail(TokenIntApp).then(res => {\n  expect(res.body.CorpoEmail).to.exist;\n  expect(res.status).to.be.equal(200);\n});",
              "err": {},
              "uuid": "eb8e3c08-db11-4a8d-b10d-23394bdbbfdc",
              "parentUUID": "dab0e618-84a0-4ee9-a05b-be144cf22743",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "deve recuperar o texto para email de confirmação de avaria",
              "fullTitle": "AVARIA deve recuperar o texto para email de confirmação de avaria",
              "timedOut": null,
              "duration": 597,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.recuperaTextoEmailConfirmAvaria(TokenIntApp).then(res => {\n  expect(res.body.CorpoEmail).to.exist;\n  expect(res.status).to.be.equal(200);\n});",
              "err": {},
              "uuid": "67c76565-bead-4452-8086-526e9a95a93a",
              "parentUUID": "dab0e618-84a0-4ee9-a05b-be144cf22743",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "deve recuperar um texto para email de notificação extrajudicial",
              "fullTitle": "AVARIA deve recuperar um texto para email de notificação extrajudicial",
              "timedOut": null,
              "duration": 181,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.recuperaTextoEmailNotifiExtrajudicial(TokenIntApp).then(res => {\n  expect(res.body.CorpoEmail).to.exist;\n  expect(res.status).to.be.equal(200);\n});",
              "err": {},
              "uuid": "0c8a48ad-c5b4-4a76-814c-a417aabc0ae1",
              "parentUUID": "dab0e618-84a0-4ee9-a05b-be144cf22743",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "deve recuperar texto para email de aviso de protesto",
              "fullTitle": "AVARIA deve recuperar texto para email de aviso de protesto",
              "timedOut": null,
              "duration": 150,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.recuperaTextoEmailAvisoProtesto(TokenIntApp).then(res => {\n  expect(res.body.CorpoEmail).to.exist;\n  expect(res.status).to.be.equal(200);\n});",
              "err": {},
              "uuid": "a7f69f3a-5ef3-4684-a338-1ef104a83544",
              "parentUUID": "dab0e618-84a0-4ee9-a05b-be144cf22743",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "deve listar formas de pagamento de avarias",
              "fullTitle": "AVARIA deve listar formas de pagamento de avarias",
              "timedOut": null,
              "duration": 80,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.listaFormasPagamentoAvarias(TokenIntApp).then(res => {\n  expect(res.body.length).to.exist;\n  expect(res.status).to.be.equal(200);\n});",
              "err": {},
              "uuid": "82545fda-29ae-4ad1-b1e8-7cf985e49a86",
              "parentUUID": "dab0e618-84a0-4ee9-a05b-be144cf22743",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "5cf58f8c-b04d-477f-8dac-ee9c66e8744c",
            "eb8e3c08-db11-4a8d-b10d-23394bdbbfdc",
            "67c76565-bead-4452-8086-526e9a95a93a",
            "0c8a48ad-c5b4-4a76-814c-a417aabc0ae1",
            "a7f69f3a-5ef3-4684-a338-1ef104a83544",
            "82545fda-29ae-4ad1-b1e8-7cf985e49a86"
          ],
          "failures": [
            "0be35646-309e-4fd5-8c6b-6e77ed3958a0"
          ],
          "pending": [],
          "skipped": [],
          "duration": 106528,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "f1849462-1912-4896-936b-8b8a6acd5b51",
      "title": "",
      "fullFile": "campanha novo/specs/campanhanovo.spec.js",
      "file": "campanha novo/specs/campanhanovo.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "06f6615c-be16-4447-8d79-594577a71bc6",
          "title": "CAMPANHA NOVO",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "deve recuperar uma lista das campanhas web cadastradas no portal de aplicações",
              "fullTitle": "CAMPANHA NOVO deve recuperar uma lista das campanhas web cadastradas no portal de aplicações",
              "timedOut": null,
              "duration": 626,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.recuperaListaCampanhaWeb(TokenIntApp).then(res => {\n  expect(res.body.Total).to.exist;\n  expect(res.status).to.be.equal(200);\n});",
              "err": {},
              "uuid": "aead17ba-5081-4a8f-9ddd-20855c6ce596",
              "parentUUID": "06f6615c-be16-4447-8d79-594577a71bc6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "deve inserir um novo registro",
              "fullTitle": "CAMPANHA NOVO deve inserir um novo registro",
              "timedOut": null,
              "duration": 370,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.inseriRegistro(TokenIntApp).then(res => {\n  let codigoRegistro = res.body.Codigo;\n  expect(res.body.Codigo).to.be.equal(codigoRegistro);\n  expect(res.body.Nome).to.be.equal('teste QA');\n});",
              "err": {},
              "uuid": "d7f46593-cd17-4fad-aad1-2eb40bba9ba7",
              "parentUUID": "06f6615c-be16-4447-8d79-594577a71bc6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "deve atualizar um registro",
              "fullTitle": "CAMPANHA NOVO deve atualizar um registro",
              "timedOut": null,
              "duration": 273,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.atualizaRegistro(TokenIntApp).then(res => {\n  expect(res.body.Codigo).to.be.equal(1477);\n  expect(res.body.Nome).to.be.equal('Landing page Setembro dia 13');\n  expect(res.status).to.be.equal(200);\n});",
              "err": {},
              "uuid": "418c4294-c50f-4860-8718-4ef8039b76aa",
              "parentUUID": "06f6615c-be16-4447-8d79-594577a71bc6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "deve recuperar uma campanha web cadastrada no sistema",
              "fullTitle": "CAMPANHA NOVO deve recuperar uma campanha web cadastrada no sistema",
              "timedOut": null,
              "duration": 643,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.recuperaCampanhaWeb(TokenIntApp).then(res => {\n  expect(res.body.Codigo).to.be.equal(53);\n  expect(res.body.Nome).to.be.equal('98309 VID GM ASTRA PB 03/11 3/4/5P VFA (P/S/SPG) OSG');\n  expect(res.body.CodigoTipoCampanha).to.be.equal(29);\n  expect(res.body.CodigoTipoNegocio).to.be.equal(1);\n  expect(res.status).to.be.equal(200);\n});",
              "err": {},
              "uuid": "c80f0496-a8dd-4c4d-9762-9f9c73738ead",
              "parentUUID": "06f6615c-be16-4447-8d79-594577a71bc6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "deve alterar a situação de uma campanha de acordo com o parâmetro",
              "fullTitle": "CAMPANHA NOVO deve alterar a situação de uma campanha de acordo com o parâmetro",
              "timedOut": null,
              "duration": 178,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.alteraSituacaoCampanha(TokenIntApp).then(res => {\n  expect(res.status).to.be.equal(200);\n});",
              "err": {},
              "uuid": "bd708efb-fffa-40f7-a4b9-89f3ef05dd3d",
              "parentUUID": "06f6615c-be16-4447-8d79-594577a71bc6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "deve duplicar uma campanha web",
              "fullTitle": "CAMPANHA NOVO deve duplicar uma campanha web",
              "timedOut": null,
              "duration": 21642,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.duplicaCampanhaWeb(TokenIntApp).then(res => {\n  expect(res.status).to.be.equal(200);\n});",
              "err": {},
              "uuid": "aca9bf81-a699-4451-9cb7-5c16bd0c99a7",
              "parentUUID": "06f6615c-be16-4447-8d79-594577a71bc6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "deve atualizar um Registro/Produto",
              "fullTitle": "CAMPANHA NOVO deve atualizar um Registro/Produto",
              "timedOut": null,
              "duration": 182,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.atualizaRegistroProduto(TokenIntApp).then(res => {\n  expect(res.body.CodigoCampanha).to.be.equal(16);\n  expect(res.body.CodigoProduto).to.be.equal(1189116);\n  expect(res.body.QuantidadePrevista).to.be.equal(1);\n  expect(res.body.Descricao).to.be.equal(null);\n});",
              "err": {},
              "uuid": "105bd57b-9805-4617-b9ce-7f9a0f2acd28",
              "parentUUID": "06f6615c-be16-4447-8d79-594577a71bc6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "deve excluir um registro",
              "fullTitle": "CAMPANHA NOVO deve excluir um registro",
              "timedOut": null,
              "duration": 153,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.deletaRegistro(TokenIntApp).then(res => {\n  expect(res.status).to.be.equal(200);\n});",
              "err": {},
              "uuid": "eeb0d076-0bab-426a-9357-b54a261ac93d",
              "parentUUID": "06f6615c-be16-4447-8d79-594577a71bc6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "deve excluir todos os produtos relacionados à uma campanha",
              "fullTitle": "CAMPANHA NOVO deve excluir todos os produtos relacionados à uma campanha",
              "timedOut": null,
              "duration": 151,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.deletaRegistrosCampanha(TokenIntApp).then(res => {\n  expect(res.status).to.be.equal(200);\n});",
              "err": {},
              "uuid": "907c9607-1889-4824-ad58-9bc83e535a1d",
              "parentUUID": "06f6615c-be16-4447-8d79-594577a71bc6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "deve exportar excel dos produtos da campanha nçao cadastrados nas lading page existentes",
              "fullTitle": "CAMPANHA NOVO deve exportar excel dos produtos da campanha nçao cadastrados nas lading page existentes",
              "timedOut": null,
              "duration": 1854,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.exportaExcelProdutos(TokenIntApp).then(res => {\n  expect(res.status).to.be.equal(200);\n});",
              "err": {},
              "uuid": "2f70eb7b-907c-40a5-9a58-ed4a04495e77",
              "parentUUID": "06f6615c-be16-4447-8d79-594577a71bc6",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "aead17ba-5081-4a8f-9ddd-20855c6ce596",
            "d7f46593-cd17-4fad-aad1-2eb40bba9ba7",
            "418c4294-c50f-4860-8718-4ef8039b76aa",
            "c80f0496-a8dd-4c4d-9762-9f9c73738ead",
            "bd708efb-fffa-40f7-a4b9-89f3ef05dd3d",
            "aca9bf81-a699-4451-9cb7-5c16bd0c99a7",
            "105bd57b-9805-4617-b9ce-7f9a0f2acd28",
            "eeb0d076-0bab-426a-9357-b54a261ac93d",
            "907c9607-1889-4824-ad58-9bc83e535a1d",
            "2f70eb7b-907c-40a5-9a58-ed4a04495e77"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 26072,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "f9498a4f-7436-4b41-8f0c-7e550e3af688",
      "title": "",
      "fullFile": "carteira cliente/specs/carteiracliente.spec.js",
      "file": "carteira cliente/specs/carteiracliente.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "0ce50836-5655-45e7-b81a-f9e6cb4f3a3f",
          "title": "CARTEIRA CLIENTE",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "deve listar a carteira do cliente pelo código",
              "fullTitle": "CARTEIRA CLIENTE deve listar a carteira do cliente pelo código",
              "timedOut": null,
              "duration": 480,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.listaCarteiraCliente(TokenIntApp).then(res => {\n  expect(res.body.CodigoCliente).to.be.equal(1640022);\n  expect(res.body.RazaoSocial).to.be.equal('Jam Pierre Dias Rosa M E');\n  expect(res.body.CodigoVendedor).to.be.equal(14607);\n  expect(res.body.NomeVendedor).to.be.equal('Amanda Alves Da Silva');\n  expect(res.body.EquipeVendedor).to.be.equal('Ilha Atacado Novo - Equipe Atacado Novo 1');\n  expect(res.status).to.be.equal(200);\n});",
              "err": {},
              "uuid": "4560ef37-785b-4d96-8518-eb34966fa0c0",
              "parentUUID": "0ce50836-5655-45e7-b81a-f9e6cb4f3a3f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "4560ef37-785b-4d96-8518-eb34966fa0c0"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 480,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "fddf3ccb-1f13-4b31-86a1-0437f65cd4cd",
      "title": "",
      "fullFile": "clube de fidelidade/specs/clubefidelidade.spec.js",
      "file": "clube de fidelidade/specs/clubefidelidade.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "c6dce26c-365a-454c-96cf-28e5c35dbd91",
          "title": "CLUBE DE FIDELIDADE",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "deve recuperar uma lista de promoções de acordo com o filtro",
              "fullTitle": "CLUBE DE FIDELIDADE deve recuperar uma lista de promoções de acordo com o filtro",
              "timedOut": null,
              "duration": 539,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.recuperaListaPromocoes(TokenIntApp).then(res => {\n  expect(res.body.Total).to.be.equal(12);\n  expect(res.body.Registros[0].CodigoPromocao).to.be.equal(42);\n  expect(res.body.Registros[1].CodigoPromocao).to.be.equal(40);\n  expect(res.body.Registros[2].CodigoPromocao).to.be.equal(39);\n  expect(res.status).to.be.equal(200);\n});",
              "err": {},
              "uuid": "7647a825-0b6e-4eea-b4ef-9466dac755cf",
              "parentUUID": "c6dce26c-365a-454c-96cf-28e5c35dbd91",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "deve recuperar uma determinada promoção pelo seu código",
              "fullTitle": "CLUBE DE FIDELIDADE deve recuperar uma determinada promoção pelo seu código",
              "timedOut": null,
              "duration": 319,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.recuperaDeterminadaPromocao(TokenIntApp).then(res => {\n  expect(res.body.CodigoPromocao).to.be.equal(42);\n  expect(res.body.PromocaoDescricao).to.exist.value;\n  expect(res.body.Usuario.Codigo).to.exist.value;\n  expect(res.body.Usuario.Descricao).to.exist.value;\n  expect(res.body.PromocaoCategoria.CodigoPromocaoCategoria).to.exist.value;\n  expect(res.body.PromocaoCategoria.Categoria.Codigo).to.exist.value;\n  expect(res.body.PromocaoCategoria.Categoria.Descricao).to.exist.value;\n  expect(res.status).to.be.equal(200);\n});",
              "err": {},
              "uuid": "87389df5-c7f4-4418-89c9-812cf7716a75",
              "parentUUID": "c6dce26c-365a-454c-96cf-28e5c35dbd91",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "7647a825-0b6e-4eea-b4ef-9466dac755cf",
            "87389df5-c7f4-4418-89c9-812cf7716a75"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 858,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "1d1f065c-7c5c-4006-905f-0bcbeac66027",
      "title": "",
      "fullFile": "devolucaoSolicitacao/specs/devolucaoSolicitacao.spec.js",
      "file": "devolucaoSolicitacao/specs/devolucaoSolicitacao.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "bdc09427-435e-4353-828d-7932cf5ff0ad",
          "title": "DEVOLUÇÃO SOLICITAÇÃO",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "deve listar situações das devoluções",
              "fullTitle": "DEVOLUÇÃO SOLICITAÇÃO deve listar situações das devoluções",
              "timedOut": null,
              "duration": 300345,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.listaSituacoesDevolucoes(TokenPortalInterno).then(res => {\n  expect(res.body.length).is.not.equal(0);\n  expect(res.body.length).to.be.exist;\n  expect(res.status).to.be.equal(200);\n});",
              "err": {
                "message": "CypressError: `cy.request()` failed on:\n\nhttps://api-int-hml.autoglass.com.br/portal-do-cliente-hub-api/api/autenticacoes\n\nThe response we received from your web server was:\n\n  > 504: Gateway Timeout\n\nThis was considered a failure because the status code was not `2xx` or `3xx`.\n\nIf you do not want status codes to cause failures pass the option: `failOnStatusCode: false`\n\n-----------------------------------------------------------\n\nThe request we sent was:\n\nMethod: POST\nURL: https://api-int-hml.autoglass.com.br/portal-do-cliente-hub-api/api/autenticacoes\nHeaders: {\n  \"Connection\": \"keep-alive\",\n  \"user-agent\": \"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Cypress/9.5.2 Chrome/94.0.4606.81 Electron/15.3.4 Safari/537.36\",\n  \"accept\": \"*/*\",\n  \"accept-encoding\": \"gzip, deflate\",\n  \"content-type\": \"application/json\",\n  \"content-length\": 64\n}\nBody: {\"Login\":\"genivaldosobreira1@hotmail.com\",\"Senha\":\"homologacao\"}\n\n-----------------------------------------------------------\n\nThe response we got was:\n\nStatus: 504 - Gateway Timeout\nHeaders: {\n  \"server\": \"nginx\",\n  \"date\": \"Tue, 12 Jul 2022 08:18:53 GMT\",\n  \"content-type\": \"text/html; charset=UTF-8\",\n  \"content-length\": \"562\",\n  \"connection\": \"keep-alive\"\n}\nBody: <html>\r\n<head><title>504 Gateway Time-out</title></head>\r\n<body>\r\n<center><h1>504 Gateway Time-out</h1></center>\r\n<hr><center>nginx</center>\r\n</body>\r\n</html>\r\n<!-- a padding to disable MSIE and Chrome friendly error page -->\r\n<!-- a padding to disable MSIE and Chrome friendly error page -->\r\n<!-- a padding to disable MSIE and Chrome friendly error page -->\r\n<!-- a padding to disable MSIE and Chrome friendly error page -->\r\n<!-- a padding to disable MSIE and Chrome friendly error page -->\r\n<!-- a padding to disable MSIE and Chrome friendly error page -->\r\n\nhttps://on.cypress.io/request\n\nBecause this error occurred during a `before all` hook we are skipping the remaining tests in the current suite: `DEVOLUÇÃO SOLICITAÇÃO`",
                "estack": "CypressError: `cy.request()` failed on:\n\nhttps://api-int-hml.autoglass.com.br/portal-do-cliente-hub-api/api/autenticacoes\n\nThe response we received from your web server was:\n\n  > 504: Gateway Timeout\n\nThis was considered a failure because the status code was not `2xx` or `3xx`.\n\nIf you do not want status codes to cause failures pass the option: `failOnStatusCode: false`\n\n-----------------------------------------------------------\n\nThe request we sent was:\n\nMethod: POST\nURL: https://api-int-hml.autoglass.com.br/portal-do-cliente-hub-api/api/autenticacoes\nHeaders: {\n  \"Connection\": \"keep-alive\",\n  \"user-agent\": \"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Cypress/9.5.2 Chrome/94.0.4606.81 Electron/15.3.4 Safari/537.36\",\n  \"accept\": \"*/*\",\n  \"accept-encoding\": \"gzip, deflate\",\n  \"content-type\": \"application/json\",\n  \"content-length\": 64\n}\nBody: {\"Login\":\"genivaldosobreira1@hotmail.com\",\"Senha\":\"homologacao\"}\n\n-----------------------------------------------------------\n\nThe response we got was:\n\nStatus: 504 - Gateway Timeout\nHeaders: {\n  \"server\": \"nginx\",\n  \"date\": \"Tue, 12 Jul 2022 08:18:53 GMT\",\n  \"content-type\": \"text/html; charset=UTF-8\",\n  \"content-length\": \"562\",\n  \"connection\": \"keep-alive\"\n}\nBody: <html>\r\n<head><title>504 Gateway Time-out</title></head>\r\n<body>\r\n<center><h1>504 Gateway Time-out</h1></center>\r\n<hr><center>nginx</center>\r\n</body>\r\n</html>\r\n<!-- a padding to disable MSIE and Chrome friendly error page -->\r\n<!-- a padding to disable MSIE and Chrome friendly error page -->\r\n<!-- a padding to disable MSIE and Chrome friendly error page -->\r\n<!-- a padding to disable MSIE and Chrome friendly error page -->\r\n<!-- a padding to disable MSIE and Chrome friendly error page -->\r\n<!-- a padding to disable MSIE and Chrome friendly error page -->\r\n\nhttps://on.cypress.io/request\n\nBecause this error occurred during a `before all` hook we are skipping the remaining tests in the current suite: `DEVOLUÇÃO SOLICITAÇÃO`\n    at https://api-int-hml.autoglass.com.br/__cypress/runner/cypress_runner.js:160659:80\n    at tryCatcher (https://api-int-hml.autoglass.com.br/__cypress/runner/cypress_runner.js:13022:23)\n    at Promise._settlePromiseFromHandler (https://api-int-hml.autoglass.com.br/__cypress/runner/cypress_runner.js:10957:31)\n    at Promise._settlePromise (https://api-int-hml.autoglass.com.br/__cypress/runner/cypress_runner.js:11014:18)\n    at Promise._settlePromise0 (https://api-int-hml.autoglass.com.br/__cypress/runner/cypress_runner.js:11059:10)\n    at Promise._settlePromises (https://api-int-hml.autoglass.com.br/__cypress/runner/cypress_runner.js:11139:18)\n    at _drainQueueStep (https://api-int-hml.autoglass.com.br/__cypress/runner/cypress_runner.js:7729:12)\n    at _drainQueue (https://api-int-hml.autoglass.com.br/__cypress/runner/cypress_runner.js:7722:9)\n    at Async.../../node_modules/bluebird/js/release/async.js.Async._drainQueues (https://api-int-hml.autoglass.com.br/__cypress/runner/cypress_runner.js:7738:5)\n    at Async.drainQueues (https://api-int-hml.autoglass.com.br/__cypress/runner/cypress_runner.js:7608:14)\nFrom Your Spec Code:\n    at Context.eval (https://api-int-hml.autoglass.com.br/__cypress/tests?p=index.js:2266:6)",
                "diff": null
              },
              "uuid": "d176ede1-dd73-4f58-b2cb-194228ff53a8",
              "parentUUID": "bdc09427-435e-4353-828d-7932cf5ff0ad",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "deve listar os tipos de solicitações (web)",
              "fullTitle": "DEVOLUÇÃO SOLICITAÇÃO deve listar os tipos de solicitações (web)",
              "timedOut": null,
              "duration": 0,
              "state": "skipped",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.listaTiposSolicitacoesWeb(TokenPortalInterno).then(res => {\n  expect(res.body.length).is.not.equal(0);\n  expect(res.body.length).to.be.exist;\n  expect(res.status).to.be.equal(200);\n});",
              "err": {},
              "uuid": "aa8aafc3-9feb-4c67-ac17-90bc64226ab1",
              "parentUUID": "bdc09427-435e-4353-828d-7932cf5ff0ad",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "deve buscar devolução",
              "fullTitle": "DEVOLUÇÃO SOLICITAÇÃO deve buscar devolução",
              "timedOut": null,
              "duration": 0,
              "state": "skipped",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.buscaDevolucao(TokenPortalInterno).then(res => {\n  expect(res.body.Codigo).to.be.equal(30847);\n  expect(res.body.CodigoVenda).to.be.equal(11166996);\n  expect(res.body.CodigoCliente).to.be.equal(2389378);\n  expect(res.body.NomeCliente).to.be.equal('Bis Distribuidora De Veiculos Ltda');\n  expect(res.status).to.be.equal(200);\n});",
              "err": {},
              "uuid": "29e05fd4-ca81-4e5f-98fd-6cfba80e746e",
              "parentUUID": "bdc09427-435e-4353-828d-7932cf5ff0ad",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "deve listar status da devolução",
              "fullTitle": "DEVOLUÇÃO SOLICITAÇÃO deve listar status da devolução",
              "timedOut": null,
              "duration": 0,
              "state": "skipped",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.listaStatusDevolucao(TokenPortalInterno).then(res => {\n  expect(res.body.Registros.length).is.not.equal(0);\n  expect(res.body.Registros.length).to.be.exist;\n  expect(res.status).to.be.equal(200);\n});",
              "err": {},
              "uuid": "60709c24-ef96-48d9-9c93-e6a720f40eba",
              "parentUUID": "bdc09427-435e-4353-828d-7932cf5ff0ad",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "deve buscar dados credenciado",
              "fullTitle": "DEVOLUÇÃO SOLICITAÇÃO deve buscar dados credenciado",
              "timedOut": null,
              "duration": 0,
              "state": "skipped",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.buscaDadosCredenciado(TokenPortalInterno).then(res => {\n  expect(res.status).to.be.equal(200);\n});",
              "err": {},
              "uuid": "3f0ef9e3-524f-4171-b692-3a7bb7d22056",
              "parentUUID": "bdc09427-435e-4353-828d-7932cf5ff0ad",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "deve lista anexos dos itens da devolução",
              "fullTitle": "DEVOLUÇÃO SOLICITAÇÃO deve lista anexos dos itens da devolução",
              "timedOut": null,
              "duration": 0,
              "state": "skipped",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.listaAnexoItensDevolucao(TokenPortalInterno).then(res => {\n  expect(res.body.length).is.not.equal(0);\n  expect(res.body.length).to.be.exist;\n  expect(res.status).to.be.equal(200);\n});",
              "err": {},
              "uuid": "be4ec1fc-cb35-47cc-ba48-623ef8a49b1a",
              "parentUUID": "bdc09427-435e-4353-828d-7932cf5ff0ad",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "deve fazer download anexos itens devolução em formato zip(web)",
              "fullTitle": "DEVOLUÇÃO SOLICITAÇÃO deve fazer download anexos itens devolução em formato zip(web)",
              "timedOut": null,
              "duration": 0,
              "state": "skipped",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.downloadAnexoItemDevolucao(TokenPortalInterno).then(res => {\n  expect(res.body).to.be.exist;\n  expect(res.status).to.be.equal(200);\n});",
              "err": {},
              "uuid": "0ca4b04d-5a30-4429-bbbe-b8e8e0769a2f",
              "parentUUID": "bdc09427-435e-4353-828d-7932cf5ff0ad",
              "isHook": false,
              "skipped": true
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "d176ede1-dd73-4f58-b2cb-194228ff53a8"
          ],
          "pending": [],
          "skipped": [
            "aa8aafc3-9feb-4c67-ac17-90bc64226ab1",
            "29e05fd4-ca81-4e5f-98fd-6cfba80e746e",
            "60709c24-ef96-48d9-9c93-e6a720f40eba",
            "3f0ef9e3-524f-4171-b692-3a7bb7d22056",
            "be4ec1fc-cb35-47cc-ba48-623ef8a49b1a",
            "0ca4b04d-5a30-4429-bbbe-b8e8e0769a2f"
          ],
          "duration": 300345,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "b4272724-d95e-48f4-990f-f76a1fc59850",
      "title": "",
      "fullFile": "devolucoesCias/specs/devolucoesCias.spec.js",
      "file": "devolucoesCias/specs/devolucoesCias.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "732133f0-8e13-4980-9da4-a4171db816b6",
          "title": "DEVOLUÇÕES E CIAS",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "deve retornar uma lista de detalhes de motivos",
              "fullTitle": "DEVOLUÇÕES E CIAS deve retornar uma lista de detalhes de motivos",
              "timedOut": null,
              "duration": 492,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.listaDetalhesDeMotivo(TokenIntApp).then(res => {\n  expect(res.body.Registros.length).is.not.equal(0);\n  expect(res.body.Registros.length).to.be.exist;\n  expect(res.status).to.be.equal(200);\n});",
              "err": {},
              "uuid": "3ceed5fe-1675-4277-a2db-037a50a73514",
              "parentUUID": "732133f0-8e13-4980-9da4-a4171db816b6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "deve inserir um detalhe de um motivo",
              "fullTitle": "DEVOLUÇÕES E CIAS deve inserir um detalhe de um motivo",
              "timedOut": null,
              "duration": 258,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.insereDetalheMotivo(TokenIntApp).then(res => {\n  codMotivoDetalhe = res.body.CodigoMotivoDetalhe;\n  expect(res.status).to.be.equal(201);\n});",
              "err": {},
              "uuid": "fd31e33c-21d8-4901-a59b-f4272d2eec55",
              "parentUUID": "732133f0-8e13-4980-9da4-a4171db816b6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "deve retornar um detalhe de um motivo",
              "fullTitle": "DEVOLUÇÕES E CIAS deve retornar um detalhe de um motivo",
              "timedOut": null,
              "duration": 131,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.retornaDetalheDeUmMotivo(TokenIntApp).then(res => {\n  expect(res.body.CodigoMotivoDetalhe).to.be.equal(36);\n  expect(res.body.DescricaoDetalhe).to.be.equal(\"Aguardando conferência Unidade\");\n  expect(res.status).to.be.equal(200);\n});",
              "err": {},
              "uuid": "4842c95d-6908-4fab-aaf1-272ebac82f36",
              "parentUUID": "732133f0-8e13-4980-9da4-a4171db816b6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "deve alterar um detalhe de um motivo",
              "fullTitle": "DEVOLUÇÕES E CIAS deve alterar um detalhe de um motivo",
              "timedOut": null,
              "duration": 217,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.alteraDetalheMotivo(TokenIntApp).then(res => {\n  expect(res.status).to.be.equal(200);\n});",
              "err": {},
              "uuid": "70608134-3698-4a6e-953f-b4760b67bd42",
              "parentUUID": "732133f0-8e13-4980-9da4-a4171db816b6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "deve excluir um detalhe de um motivo",
              "fullTitle": "DEVOLUÇÕES E CIAS deve excluir um detalhe de um motivo",
              "timedOut": null,
              "duration": 108,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.excluiDetalheMotivo(TokenIntApp, codMotivoDetalhe).then(res => {\n  expect(res.status).to.be.equal(200);\n});",
              "err": {},
              "uuid": "0e3615cc-a2f4-467b-b347-cc1edc1f839e",
              "parentUUID": "732133f0-8e13-4980-9da4-a4171db816b6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "deve retornar uma lista de motivos com detalhes por setor",
              "fullTitle": "DEVOLUÇÕES E CIAS deve retornar uma lista de motivos com detalhes por setor",
              "timedOut": null,
              "duration": 155,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.listaMotivoDetalheSetor(TokenIntApp).then(res => {\n  expect(res.body.Registros.length).to.be.exist;\n  expect(res.body.Registros.length).is.not.equal(0);\n  expect(res.status).to.be.equal(200);\n});",
              "err": {},
              "uuid": "1df29f27-6851-47c4-bfe1-aca2b2c5dfdf",
              "parentUUID": "732133f0-8e13-4980-9da4-a4171db816b6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "deve retornar uma lista de auditorias devoluções",
              "fullTitle": "DEVOLUÇÕES E CIAS deve retornar uma lista de auditorias devoluções",
              "timedOut": null,
              "duration": 272,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.retornaListaAuditoriaDevolucoes(TokenIntApp).then(res => {\n  expect(res.body.Registros.length).to.be.exist;\n  expect(res.body.Registros.length).is.not.equal(0);\n  expect(res.status).to.be.equal(200);\n});",
              "err": {},
              "uuid": "5b9f4c9c-65ca-4041-9b39-8f89e641d9f4",
              "parentUUID": "732133f0-8e13-4980-9da4-a4171db816b6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "deve retornar uma lista de devoluções",
              "fullTitle": "DEVOLUÇÕES E CIAS deve retornar uma lista de devoluções",
              "timedOut": null,
              "duration": 9568,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.listaDevolucoes(TokenIntApp).then(res => {\n  expect(res.body.Registros.length).is.not.equal(0);\n  expect(res.body.Registros.length).to.be.exist;\n  expect(res.status).to.be.equal(200);\n});",
              "err": {},
              "uuid": "b8afc6be-1392-4918-9fac-e8350c1d0645",
              "parentUUID": "732133f0-8e13-4980-9da4-a4171db816b6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "deve retornar uma devolução completa",
              "fullTitle": "DEVOLUÇÕES E CIAS deve retornar uma devolução completa",
              "timedOut": null,
              "duration": 695,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.retornaDevolucaoCompleta(TokenIntApp).then(res => {\n  expect(res.body.CodigoVenda).to.be.equal(16796447);\n  expect(res.body.CodigoEmpresa).to.be.equal(207);\n  expect(res.body.CodigoCliente).to.be.equal(3662164);\n  expect(res.body.RazaoSocial).to.be.equal('MAPFRE SEGUROS GERAIS SA');\n  expect(res.body.Sinistro).to.be.equal('389721520369104');\n  expect(res.status).to.be.equal(200);\n});",
              "err": {},
              "uuid": "98271ea3-b4ea-494f-9253-83a042f773e4",
              "parentUUID": "732133f0-8e13-4980-9da4-a4171db816b6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "deve retornar uma devolução",
              "fullTitle": "DEVOLUÇÕES E CIAS deve retornar uma devolução",
              "timedOut": null,
              "duration": 170,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.listaUmaDecolucao(TokenIntApp).then(res => {\n  expect(res.body.CodigoVenda).to.be.equal(16796447);\n  expect(res.body.CodigoEmpresa).to.be.equal(207);\n  expect(res.status).to.be.equal(200);\n});",
              "err": {},
              "uuid": "16c0fc14-693e-4400-8c8f-422e17ac03b3",
              "parentUUID": "732133f0-8e13-4980-9da4-a4171db816b6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "deve retornar uma lista de motivos devoluções",
              "fullTitle": "DEVOLUÇÕES E CIAS deve retornar uma lista de motivos devoluções",
              "timedOut": null,
              "duration": 223,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.listaDevolucoesCiaMotivos(TokenIntApp).then(res => {\n  expect(res.body.Registros.length).is.not.equal(0);\n  expect(res.body.Registros.length).to.be.exist;\n  expect(res.status).to.be.equal(200);\n});",
              "err": {},
              "uuid": "557d8253-fe85-464f-9441-e397ad234047",
              "parentUUID": "732133f0-8e13-4980-9da4-a4171db816b6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "deve inserir um motivo na devolução",
              "fullTitle": "DEVOLUÇÕES E CIAS deve inserir um motivo na devolução",
              "timedOut": null,
              "duration": 205,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.insereMotivoDevolucao(TokenIntApp).then(res => {\n  codMotivo = res.body.CodigoMotivo;\n  expect(res.status).to.be.equal(201);\n});",
              "err": {},
              "uuid": "e79ae2cb-6eb8-4751-a5ea-c2f2f6eb7a65",
              "parentUUID": "732133f0-8e13-4980-9da4-a4171db816b6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "deve exportar os dados do grid para excel",
              "fullTitle": "DEVOLUÇÕES E CIAS deve exportar os dados do grid para excel",
              "timedOut": null,
              "duration": 18792,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.exportaDadosGridExcel(TokenIntApp).then(res => {\n  expect(res.body).to.be.exist;\n  expect(res.status).to.be.equal(200);\n});",
              "err": {},
              "uuid": "c57a7934-2c73-4012-b539-143294b90a5d",
              "parentUUID": "732133f0-8e13-4980-9da4-a4171db816b6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "deve recuperar um motivo de devolução",
              "fullTitle": "DEVOLUÇÕES E CIAS deve recuperar um motivo de devolução",
              "timedOut": null,
              "duration": 115,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.recuperaMotivoDevolucao(TokenIntApp, codMotivo).then(res => {\n  expect(res.status).to.be.equal(200);\n});",
              "err": {},
              "uuid": "12d55c8d-8862-40ff-914f-b80c2f6ef866",
              "parentUUID": "732133f0-8e13-4980-9da4-a4171db816b6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "deve editar um motivo de devolução",
              "fullTitle": "DEVOLUÇÕES E CIAS deve editar um motivo de devolução",
              "timedOut": null,
              "duration": 185,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.alteraMotivoDevolucao(TokenIntApp, codMotivo).then(res => {\n  expect(res.status).to.be.equal(200);\n});",
              "err": {},
              "uuid": "62afb9d0-04dc-4cd4-8844-d4152f64868d",
              "parentUUID": "732133f0-8e13-4980-9da4-a4171db816b6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "deve excluir um motivo de devolução",
              "fullTitle": "DEVOLUÇÕES E CIAS deve excluir um motivo de devolução",
              "timedOut": null,
              "duration": 379,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.insereMotivoDevolucao(TokenIntApp).then(res => {\n  expect(res.status).to.be.equal(201);\n  cy.deletaMotivoDevolucao(TokenIntApp, codMotivo).then(Res => {\n    expect(res.status).to.be.equal(201);\n  });\n});",
              "err": {},
              "uuid": "76cb8e78-5e40-42ae-ab60-95a563069656",
              "parentUUID": "732133f0-8e13-4980-9da4-a4171db816b6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "deve recuperar um setor de devolução",
              "fullTitle": "DEVOLUÇÕES E CIAS deve recuperar um setor de devolução",
              "timedOut": null,
              "duration": 108,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.recuperaSetorDevolucao(TokenIntApp).then(res => {\n  expect(res.body.CodigoSetor).to.be.equal(1);\n  expect(res.body.DescricaoSetor).to.be.equal('CONCLUSÃO');\n  expect(res.status).to.be.equal(200);\n});",
              "err": {},
              "uuid": "2d7a923f-74d0-4ba0-a026-c82f71f8181e",
              "parentUUID": "732133f0-8e13-4980-9da4-a4171db816b6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "deve retornar uma lista de setores de devoluções",
              "fullTitle": "DEVOLUÇÕES E CIAS deve retornar uma lista de setores de devoluções",
              "timedOut": null,
              "duration": 131,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.listaSetoresDevolucao(TokenIntApp).then(res => {\n  expect(res.body.Registros.length).is.not.equal(0);\n  expect(res.body.Registros.length).to.be.exist;\n  expect(res.status).to.be.equal(200);\n});",
              "err": {},
              "uuid": "ad1d8fe6-924c-4531-9894-61e8e9af95e5",
              "parentUUID": "732133f0-8e13-4980-9da4-a4171db816b6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "deve retornar uma lista de setores de devoluções sem o setor conclusão",
              "fullTitle": "DEVOLUÇÕES E CIAS deve retornar uma lista de setores de devoluções sem o setor conclusão",
              "timedOut": null,
              "duration": 126,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.listaSetorDevolucaoSemSetorConclusao(TokenIntApp).then(res => {\n  expect(res.body.Registros.length).is.not.equal(0);\n  expect(res.body.Registros.length).to.be.exist;\n  expect(res.status).to.be.equal(200);\n});",
              "err": {},
              "uuid": "23fa71f2-6046-491b-98c4-189ce54c7ce3",
              "parentUUID": "732133f0-8e13-4980-9da4-a4171db816b6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "deve retornar uma lista de setores para realizarem a analise da devolução",
              "fullTitle": "DEVOLUÇÕES E CIAS deve retornar uma lista de setores para realizarem a analise da devolução",
              "timedOut": null,
              "duration": 125,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.listaSetoresAnaliseDevolucao(TokenIntApp).then(res => {\n  expect(res.body.Registros.length).is.not.equal(0);\n  expect(res.body.Registros.length).to.be.exist;\n  expect(res.status).to.be.equal(200);\n});",
              "err": {},
              "uuid": "d1a479d0-86a6-4507-a8a9-dd9fc5c1f8b8",
              "parentUUID": "732133f0-8e13-4980-9da4-a4171db816b6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "deve inserir uma observação na devolução",
              "fullTitle": "DEVOLUÇÕES E CIAS deve inserir uma observação na devolução",
              "timedOut": null,
              "duration": 277,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.insereObservacaoNaDevolucao(TokenIntApp).then(res => {\n  expect(res.status).to.be.equal(201);\n});",
              "err": {},
              "uuid": "9be8d74b-2f9c-48f4-90c4-bfe69577bb78",
              "parentUUID": "732133f0-8e13-4980-9da4-a4171db816b6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "deve retornar uma lista de observações de devoluções",
              "fullTitle": "DEVOLUÇÕES E CIAS deve retornar uma lista de observações de devoluções",
              "timedOut": null,
              "duration": 175,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.listaObservacoesDevolucoes(TokenIntApp).then(res => {\n  expect(res.body.Registros[0].CodigoDevolucaoCiasObservacao).to.be.equal(1);\n  expect(res.body.Registros[0].Observacao).to.be.equal('As informações de etapas foram registradas somente para teste.');\n  expect(res.status).to.be.equal(200);\n});",
              "err": {},
              "uuid": "36c15fb6-1e5e-499b-b9dc-308eaa15080b",
              "parentUUID": "732133f0-8e13-4980-9da4-a4171db816b6",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "3ceed5fe-1675-4277-a2db-037a50a73514",
            "fd31e33c-21d8-4901-a59b-f4272d2eec55",
            "4842c95d-6908-4fab-aaf1-272ebac82f36",
            "70608134-3698-4a6e-953f-b4760b67bd42",
            "0e3615cc-a2f4-467b-b347-cc1edc1f839e",
            "1df29f27-6851-47c4-bfe1-aca2b2c5dfdf",
            "5b9f4c9c-65ca-4041-9b39-8f89e641d9f4",
            "b8afc6be-1392-4918-9fac-e8350c1d0645",
            "98271ea3-b4ea-494f-9253-83a042f773e4",
            "16c0fc14-693e-4400-8c8f-422e17ac03b3",
            "557d8253-fe85-464f-9441-e397ad234047",
            "e79ae2cb-6eb8-4751-a5ea-c2f2f6eb7a65",
            "c57a7934-2c73-4012-b539-143294b90a5d",
            "12d55c8d-8862-40ff-914f-b80c2f6ef866",
            "62afb9d0-04dc-4cd4-8844-d4152f64868d",
            "76cb8e78-5e40-42ae-ab60-95a563069656",
            "2d7a923f-74d0-4ba0-a026-c82f71f8181e",
            "ad1d8fe6-924c-4531-9894-61e8e9af95e5",
            "23fa71f2-6046-491b-98c4-189ce54c7ce3",
            "d1a479d0-86a6-4507-a8a9-dd9fc5c1f8b8",
            "9be8d74b-2f9c-48f4-90c4-bfe69577bb78",
            "36c15fb6-1e5e-499b-b9dc-308eaa15080b"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 32907,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "68facba2-dd03-4494-88c1-f8a76aade773",
      "title": "",
      "fullFile": "email faturamento/specs/emailfaturamento.spec.js",
      "file": "email faturamento/specs/emailfaturamento.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "3515a4bd-81b7-428c-9995-ced7682e1d01",
          "title": "VENDAS",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "deve reenviar emails de acordo com o email no log de faturamento",
              "fullTitle": "VENDAS deve reenviar emails de acordo com o email no log de faturamento",
              "timedOut": null,
              "duration": 1637,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.reenviaEmail(TokenIntApp).then(res => {\n  expect(res.status).to.be.equal(200);\n});",
              "err": {},
              "uuid": "fcca10d5-278d-49f6-8518-d3ecf4fd568d",
              "parentUUID": "3515a4bd-81b7-428c-9995-ced7682e1d01",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "deve listar todos emails de faturamento enviado pelo job localiza",
              "fullTitle": "VENDAS deve listar todos emails de faturamento enviado pelo job localiza",
              "timedOut": null,
              "duration": 438,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.listaEmailFaturamento(TokenIntApp).then(res => {\n  expect(res.status).to.be.equal(200);\n});",
              "err": {},
              "uuid": "e25bed6b-1d13-4c7c-9ba4-2bfd0afa3094",
              "parentUUID": "3515a4bd-81b7-428c-9995-ced7682e1d01",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "fcca10d5-278d-49f6-8518-d3ecf4fd568d",
            "e25bed6b-1d13-4c7c-9ba4-2bfd0afa3094"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2075,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "31f85b81-c72e-4218-87f9-456550d1d0ca",
      "title": "",
      "fullFile": "gestao preço web/specs/gestaoprecoweb.spec.js",
      "file": "gestao preço web/specs/gestaoprecoweb.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "efdcf13f-9352-4da6-be3d-3490bad69730",
          "title": "GESTÃO PREÇO WEB",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "deve listar clientes para visualização de promoções inseridas pelo vendedor",
              "fullTitle": "GESTÃO PREÇO WEB deve listar clientes para visualização de promoções inseridas pelo vendedor",
              "timedOut": null,
              "duration": 583,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.listaClientesPromocoesVendedor(TokenIntApp).then(res => {\n  expect(res.body.Total).is.not.equal(0);\n  expect(res.body.Registros.length).is.not.equal(0);\n  expect(res.status).to.be.equal(200);\n});",
              "err": {},
              "uuid": "8f9f4a37-852a-4af0-92d3-7866e42ef52a",
              "parentUUID": "efdcf13f-9352-4da6-be3d-3490bad69730",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "8f9f4a37-852a-4af0-92d3-7866e42ef52a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 583,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "67ad99ac-ca55-4824-b07d-511cf243df8a",
      "title": "",
      "fullFile": "gestao/specs/gestao.spec.js",
      "file": "gestao/specs/gestao.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "897e28c2-ce0f-409b-ae32-3262d7e83210",
          "title": "GESTÃO",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "deve recuperar uma lista de usuários e cargos de acordo com os filtros informados",
              "fullTitle": "GESTÃO deve recuperar uma lista de usuários e cargos de acordo com os filtros informados",
              "timedOut": null,
              "duration": 457,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.listaUsuariosECargos(TokenIntApp).then(res => {\n  expect(res.body.Total).is.not.equal(0);\n  expect(res.body.Registros.length).is.not.equal(0);\n  expect(res.status).to.be.equal(200);\n});",
              "err": {},
              "uuid": "1c5de3b9-4b10-4ab5-b70d-9ccaffcf2779",
              "parentUUID": "897e28c2-ce0f-409b-ae32-3262d7e83210",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "deve exportar uma lista de alterações programadas para o excel",
              "fullTitle": "GESTÃO deve exportar uma lista de alterações programadas para o excel",
              "timedOut": null,
              "duration": 120,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.exportaListaAlteracoes(TokenIntApp).then(res => {\n  expect(res.status).to.be.equal(200);\n});",
              "err": {},
              "uuid": "e2ba4254-2151-4f8e-9b5a-055efa609b8c",
              "parentUUID": "897e28c2-ce0f-409b-ae32-3262d7e83210",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "deve recuperar uma lista de alterações programadas",
              "fullTitle": "GESTÃO deve recuperar uma lista de alterações programadas",
              "timedOut": null,
              "duration": 147,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.recuperaListaAlteracoesProgramadas(TokenIntApp).then(res => {\n  expect(res.body.Total).to.be.equal(0);\n  expect(res.body.Registros.length).to.be.equal(0);\n  expect(res.status).to.be.equal(200);\n});",
              "err": {},
              "uuid": "89c82dfc-9d64-420d-878d-4e95d04874c7",
              "parentUUID": "897e28c2-ce0f-409b-ae32-3262d7e83210",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "1c5de3b9-4b10-4ab5-b70d-9ccaffcf2779",
            "e2ba4254-2151-4f8e-9b5a-055efa609b8c",
            "89c82dfc-9d64-420d-878d-4e95d04874c7"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 724,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "ce7836ec-da52-41ee-8382-f03c2ce3a367",
      "title": "",
      "fullFile": "graduacao cliente/specs/graduacaoCliente.spec.js",
      "file": "graduacao cliente/specs/graduacaoCliente.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "54f83da8-f923-40fb-9e3f-f7ef35cf8f6f",
          "title": "GRADUAÇÃO CLIENTE",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "deve listar as graduações dos clientes",
              "fullTitle": "GRADUAÇÃO CLIENTE deve listar as graduações dos clientes",
              "timedOut": null,
              "duration": 400,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.listarGraduacoesClientes(TokenIntApp).then(res => {\n  expect(res.status).to.be.equal(200);\n});",
              "err": {},
              "uuid": "e56affc7-e384-459c-90d0-702937bee319",
              "parentUUID": "54f83da8-f923-40fb-9e3f-f7ef35cf8f6f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "e56affc7-e384-459c-90d0-702937bee319"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 400,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "e714d121-ca9c-4edf-8171-2da5980edb0c",
      "title": "",
      "fullFile": "grupoCliente/specs/grupoCliente.spec.js",
      "file": "grupoCliente/specs/grupoCliente.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "ac0f8c38-abff-4ba3-999d-a2b128c0cf6a",
          "title": "GRUPO CLIENTE",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "deve listar os grupos de clientes",
              "fullTitle": "GRUPO CLIENTE deve listar os grupos de clientes",
              "timedOut": null,
              "duration": 459,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.listaGrupoCliente(TokenIntApp).then(res => {\n  expect(res.body.length).is.not.equal(0);\n  expect(res.body.length).to.be.exist;\n  expect(res.status).to.be.equal(200);\n});",
              "err": {},
              "uuid": "031c982f-377a-45ca-b471-2e929aa40465",
              "parentUUID": "ac0f8c38-abff-4ba3-999d-a2b128c0cf6a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "031c982f-377a-45ca-b471-2e929aa40465"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 459,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "6cde6d28-ed95-49a0-b39f-f6b25ccd70d0",
      "title": "",
      "fullFile": "konduto/specs/konduto.spec.js",
      "file": "konduto/specs/konduto.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "fb9c11f3-0b3e-4c9a-ba31-3f406f9e15d8",
          "title": "KONDUTO",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "deve recuperar uma lista das recomendações konduto",
              "fullTitle": "KONDUTO deve recuperar uma lista das recomendações konduto",
              "timedOut": null,
              "duration": 496,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.recuperaListaRecomendacoesKonduto(TokenIntApp).then(res => {\n  expect(res.body.Total).to.be.equal(1);\n  expect(res.body.Registros.length).to.be.equal(1);\n  expect(res.body.Registros[0].Codigo).to.be.equal(8698);\n  expect(res.body.Registros[0].CodigoEmpresa).to.be.equal(95);\n  expect(res.body.Registros[0].CodigoVenda).to.be.equal(13345417);\n  expect(res.body.Registros[0].Score).to.be.equal(0.01);\n  expect(res.body.Registros[0].DescricaoRecomendacao).to.be.equal('APPROVE');\n  expect(res.body.Registros[0].DescricaoStatus).to.be.equal('PENDENTE');\n  expect(res.status).to.be.equal(200);\n});",
              "err": {},
              "uuid": "5057a5d2-ffae-4f9a-8b77-c9e870ce911d",
              "parentUUID": "fb9c11f3-0b3e-4c9a-ba31-3f406f9e15d8",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "5057a5d2-ffae-4f9a-8b77-c9e870ce911d"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 496,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "749a193c-a525-4e8c-8dc0-d9ef4269b0f9",
      "title": "",
      "fullFile": "matriz filial web/specs/matrizFilialWeb.spec.js",
      "file": "matriz filial web/specs/matrizFilialWeb.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "2e50cd0e-ed9e-4946-8558-911e963f07dc",
          "title": "MATRIZ FILIAL WEB",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "deve listar Matriz x Filial da web",
              "fullTitle": "MATRIZ FILIAL WEB deve listar Matriz x Filial da web",
              "timedOut": null,
              "duration": 463,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.listaMatrizFilialWeb(TokenIntApp).then(res => {\n  expect(res.body.Total).to.be.equal(1);\n  expect(res.body.Registros.length).to.be.equal(1);\n  expect(res.body.Registros[0].Codigo).to.be.equal(2);\n  expect(res.body.Registros[0].CodigoFilial).to.be.equal(545318);\n  expect(res.body.Registros[0].RazaoSocialFilial).to.be.equal('Localiza Rent A Car Ltda');\n  expect(res.body.Registros[0].CodigoMatriz).to.be.equal(61981);\n  expect(res.body.Registros[0].RazaoSocialMatriz).to.be.equal('Localiza Fleet S.A.');\n  expect(res.body.Registros[0].CodigoEmpresa).to.be.equal(87);\n  expect(res.body.Registros[0].AbreviacaoEmpresa).to.be.equal('MG21');\n  expect(res.body.Registros[0].CodigoCidade).to.be.equal(4079);\n  expect(res.body.Registros[0].DescricaoCidade).to.be.equal('Campo Grande');\n  expect(res.body.Registros[0].DescricaoUF).to.be.equal('MS');\n  expect(res.body.Registros[0].FaturaMatriz).to.be.equal('N');\n  expect(res.body.Registros[0].DescricaoFaturaMatriz).to.be.equal('Não');\n  expect(res.status).to.be.equal(200);\n});",
              "err": {},
              "uuid": "14e1b214-42a0-4db2-9819-8618e0965c78",
              "parentUUID": "2e50cd0e-ed9e-4946-8558-911e963f07dc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "deve exportar dados de matriz x filial",
              "fullTitle": "MATRIZ FILIAL WEB deve exportar dados de matriz x filial",
              "timedOut": null,
              "duration": 3386,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.exportaDadosMatrizFilial(TokenIntApp).then(res => {\n  expect(res.status).to.be.equal(200);\n});",
              "err": {},
              "uuid": "5808ddf9-5f8f-4459-b881-40d4272d0d42",
              "parentUUID": "2e50cd0e-ed9e-4946-8558-911e963f07dc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "deve editar relacionamento matriz x filial",
              "fullTitle": "MATRIZ FILIAL WEB deve editar relacionamento matriz x filial",
              "timedOut": null,
              "duration": 175,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.editarRelacionamentoMatrizFilial(TokenIntApp).then(res => {\n  codFilial = res.body.CodigoFilial;\n  expect(res.status).to.be.equal(200);\n});",
              "err": {},
              "uuid": "371e41c4-977a-4383-9d68-4b105453ad63",
              "parentUUID": "2e50cd0e-ed9e-4946-8558-911e963f07dc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "deve criar relacionamento matriz x filial",
              "fullTitle": "MATRIZ FILIAL WEB deve criar relacionamento matriz x filial",
              "timedOut": null,
              "duration": 165,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.criarRelacionamentoMatrizFilial(TokenIntApp, codFilial).then(res => {\n  codMatriz = res.body.CodigoMatriz;\n  codFilial = res.body.CodigoFilial;\n  expect(res.status).to.be.equal(201);\n});",
              "err": {},
              "uuid": "16e9839b-36d5-4053-a840-1c136f943047",
              "parentUUID": "2e50cd0e-ed9e-4946-8558-911e963f07dc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "deve excluir relacionamento de matriz filial",
              "fullTitle": "MATRIZ FILIAL WEB deve excluir relacionamento de matriz filial",
              "timedOut": null,
              "duration": 133,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.excluiRelacionamentoMatrizFilial(TokenIntApp, codFilial, codMatriz).then(res => {\n  expect(res.status).to.be.equal(200);\n});",
              "err": {},
              "uuid": "ef7681b2-23e8-428f-9886-6e85f73ec348",
              "parentUUID": "2e50cd0e-ed9e-4946-8558-911e963f07dc",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "14e1b214-42a0-4db2-9819-8618e0965c78",
            "5808ddf9-5f8f-4459-b881-40d4272d0d42",
            "371e41c4-977a-4383-9d68-4b105453ad63",
            "16e9839b-36d5-4053-a840-1c136f943047",
            "ef7681b2-23e8-428f-9886-6e85f73ec348"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 4322,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "8f547cdc-7eb5-4220-90c6-ebf43b714724",
      "title": "",
      "fullFile": "meta de vendas/specs/metaDeVendas.spec.js",
      "file": "meta de vendas/specs/metaDeVendas.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "731478c2-2265-4541-afe3-9c3195224192",
          "title": "META DE VENDAS",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "deve recuperar uma lista de metas de vendas de acordo com os filtros informados",
              "fullTitle": "META DE VENDAS deve recuperar uma lista de metas de vendas de acordo com os filtros informados",
              "timedOut": null,
              "duration": 492,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.recuperaListaMetaVendas(TokenIntApp).then(res => {\n  expect(res.body.Total).to.be.gt(0);\n  expect(res.status).to.be.equal(200);\n});",
              "err": {},
              "uuid": "0e17d73f-8c1f-47cf-953b-f7c2db5a68da",
              "parentUUID": "731478c2-2265-4541-afe3-9c3195224192",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "deve recuperar uma meta de vendas pelo código",
              "fullTitle": "META DE VENDAS deve recuperar uma meta de vendas pelo código",
              "timedOut": null,
              "duration": 141,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.recuperaMetaVendas(TokenIntApp).then(res => {\n  expect(res.body.CodigoMetaVenda).to.be.equal(114);\n  expect(res.body.Equipe.Codigo).to.be.equal(86);\n  expect(res.body.Equipe.Descricao).to.be.equal('Equipe Balcão Ceven A');\n  expect(res.body.AutoLider.Codigo).to.be.equal(788);\n  expect(res.body.AutoLider.Descricao).to.be.equal('Lusiomar Marques');\n  expect(res.body.Vendedor.Codigo).to.be.equal(10090);\n  expect(res.body.Vendedor.Descricao).to.be.equal('Fernanda Gama De Oliveira');\n  expect(res.body.ValorMetaDeVenda).to.be.equal(89222.09);\n  expect(res.body.Mes).to.be.equal(4);\n  expect(res.body.Ano).to.be.equal(2018);\n  expect(res.body.ValorBonus).to.be.equal(0);\n  expect(res.body.Ferias).to.be.equal('N');\n  expect(res.body.FeriasDescricao).to.be.equal('Não');\n  expect(res.body.ContarMeta).to.be.equal('N');\n  expect(res.body.ContarMetaDescricao).to.be.equal('Não');\n  expect(res.body.Observacao).to.be.equal(null);\n  expect(res.status).to.be.equal(200);\n});",
              "err": {},
              "uuid": "dae0fab2-3616-46fc-b901-303aa087e1e8",
              "parentUUID": "731478c2-2265-4541-afe3-9c3195224192",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "deve exportar dados para o excel",
              "fullTitle": "META DE VENDAS deve exportar dados para o excel",
              "timedOut": null,
              "duration": 998,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.exportaDados(TokenIntApp).then(res => {\n  expect(res.status).to.be.equal(200);\n});",
              "err": {},
              "uuid": "a42d2fff-35d3-41c2-beb8-7898b8d392c4",
              "parentUUID": "731478c2-2265-4541-afe3-9c3195224192",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "deve inserir uma no meta de vendas",
              "fullTitle": "META DE VENDAS deve inserir uma no meta de vendas",
              "timedOut": null,
              "duration": 299,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.insereNovaMetaVendas(TokenIntApp, codMetaVenda).then(res => {\n  codMetaVenda = res.body.CodigoMetaVenda;\n  console.log(codMetaVenda);\n  expect(res.status).to.be.equal(201);\n});",
              "err": {},
              "uuid": "50e239c3-9e7e-41f9-b97a-a352a2957dd9",
              "parentUUID": "731478c2-2265-4541-afe3-9c3195224192",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "deve editar uma meta de vendas existentes pelo código",
              "fullTitle": "META DE VENDAS deve editar uma meta de vendas existentes pelo código",
              "timedOut": null,
              "duration": 224,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.editaMetadeVendaPeloCodigo(TokenIntApp).then(res => {\n  expect(res.status).to.be.equal(200);\n});",
              "err": {},
              "uuid": "210d4306-3b92-41b7-97af-5a85a5239370",
              "parentUUID": "731478c2-2265-4541-afe3-9c3195224192",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "deve deletar uma nova meta de venda",
              "fullTitle": "META DE VENDAS deve deletar uma nova meta de venda",
              "timedOut": null,
              "duration": 159,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.deletaMetaVenda(TokenIntApp, codMetaVenda).then(res => {\n  expect(res.status).to.be.equal(200);\n});",
              "err": {},
              "uuid": "24dd0944-1c7b-440e-9b78-990f065782b4",
              "parentUUID": "731478c2-2265-4541-afe3-9c3195224192",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "0e17d73f-8c1f-47cf-953b-f7c2db5a68da",
            "dae0fab2-3616-46fc-b901-303aa087e1e8",
            "a42d2fff-35d3-41c2-beb8-7898b8d392c4",
            "50e239c3-9e7e-41f9-b97a-a352a2957dd9",
            "210d4306-3b92-41b7-97af-5a85a5239370",
            "24dd0944-1c7b-440e-9b78-990f065782b4"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2313,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "eda1f65e-5a7a-4ca9-904b-fc2b090e4c2d",
      "title": "",
      "fullFile": "monitoria/specs/monitoria.spec.js",
      "file": "monitoria/specs/monitoria.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "cda580e1-83a0-4524-8c84-c6ab4f5ee7cb",
          "title": "MONITORIA",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "deve recuperar uma revisão de monitoria pelo código",
              "fullTitle": "MONITORIA deve recuperar uma revisão de monitoria pelo código",
              "timedOut": null,
              "duration": 547,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.recuperaRevisaoMonitoriaCodigo(TokenIntApp).then(res => {\n  expect(res.body.CodigoRevisao).to.be.equal(13);\n  expect(res.body.Avaliacao.Codigo).to.be.equal(63);\n  expect(res.body.CriterioAvaliacao.CodigoCriterioAvaliacao).to.be.equal(1279);\n  expect(res.status).to.be.equal(200);\n});",
              "err": {},
              "uuid": "71d90ce9-9bd6-411e-8e2a-dc3058909768",
              "parentUUID": "cda580e1-83a0-4524-8c84-c6ab4f5ee7cb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "deve recuperar uma lista de revisões de monitorias pelo filtro",
              "fullTitle": "MONITORIA deve recuperar uma lista de revisões de monitorias pelo filtro",
              "timedOut": null,
              "duration": 178,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.listaRevisoesMonitorias(TokenIntApp).then(res => {\n  expect(res.body.Total).to.be.equal(2);\n  expect(res.body.Registros.length).to.be.equal(2);\n  expect(res.body.Registros[0].CodigoRevisao).to.be.equal(13);\n  expect(res.body.Registros[1].CodigoRevisao).to.be.equal(14);\n  console.log(res.body);\n  expect(res.status).to.be.equal(200);\n});",
              "err": {},
              "uuid": "65ddddbb-ab2f-4f03-900c-3a13c59b8f1c",
              "parentUUID": "cda580e1-83a0-4524-8c84-c6ab4f5ee7cb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "deve inserir uma nova revisão de monitoria",
              "fullTitle": "MONITORIA deve inserir uma nova revisão de monitoria",
              "timedOut": null,
              "duration": 280,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.insereRevisaoMonitoria(TokenIntApp).then(res => {\n  codCriterio = res.body.CriterioAvaliacao.Criterio.CodigoCriterio;\n  codRevisao = res.body.CodigoRevisao;\n  console.log(codCriterio);\n  console.log(codRevisao);\n  expect(res.body.CodigoRevisao).to.be.equal(res.body.CodigoRevisao);\n  expect(res.status).to.be.equal(201);\n});",
              "err": {},
              "uuid": "2ec1f580-a2a8-4923-93fe-366400c81afd",
              "parentUUID": "cda580e1-83a0-4524-8c84-c6ab4f5ee7cb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "deve excluir uma revisão de monitoria pelo código",
              "fullTitle": "MONITORIA deve excluir uma revisão de monitoria pelo código",
              "timedOut": null,
              "duration": 160,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.excluiRevisaoMonitoriaPelocodigo(TokenIntApp, codCriterio, codRevisao).then(res => {\n  expect(res.status).to.be.equal(200);\n});",
              "err": {},
              "uuid": "8c44f0d9-a2ea-49ce-be71-b7f7eb5b725c",
              "parentUUID": "cda580e1-83a0-4524-8c84-c6ab4f5ee7cb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "deve editar uma revisão de monitoria pelo código",
              "fullTitle": "MONITORIA deve editar uma revisão de monitoria pelo código",
              "timedOut": null,
              "duration": 179,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.alteraRevisaoMonitoriaCodigo(TokenIntApp).then(res => {\n  expect(res.body.CodigoRevisao).to.be.equal(13);\n  expect(res.body.Avaliacao.Codigo).to.be.equal(63);\n  expect(res.status).to.be.equal(200);\n});",
              "err": {},
              "uuid": "41e49ab1-5d56-4a8e-bb17-97a1212df5d7",
              "parentUUID": "cda580e1-83a0-4524-8c84-c6ab4f5ee7cb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "deve recuperar uma lista de configurações de ligações pelo filtro",
              "fullTitle": "MONITORIA deve recuperar uma lista de configurações de ligações pelo filtro",
              "timedOut": null,
              "duration": 187,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.listaConfiguracoesLigacoes(TokenIntApp).then(res => {\n  expect(res.body.Total).to.be.equal(22);\n  expect(res.body.Registros.length).to.be.equal(22);\n  expect(res.body.Registros[0].CodigoConfiguracaoLigacoes).to.be.equal(230);\n  expect(res.body.Registros[1].CodigoConfiguracaoLigacoes).to.be.equal(221);\n  expect(res.body.Registros[2].CodigoConfiguracaoLigacoes).to.be.equal(212);\n  expect(res.body.Registros[3].CodigoConfiguracaoLigacoes).to.be.equal(203);\n  expect(res.body.Registros[4].CodigoConfiguracaoLigacoes).to.be.equal(189);\n  expect(res.body.Registros[5].CodigoConfiguracaoLigacoes).to.be.equal(185);\n  expect(res.body.Registros[6].CodigoConfiguracaoLigacoes).to.be.equal(176);\n  expect(res.body.Registros[7].CodigoConfiguracaoLigacoes).to.be.equal(167);\n  expect(res.body.Registros[8].CodigoConfiguracaoLigacoes).to.be.equal(153);\n  expect(res.body.Registros[9].CodigoConfiguracaoLigacoes).to.be.equal(149);\n  expect(res.body.Registros[10].CodigoConfiguracaoLigacoes).to.be.equal(140);\n  expect(res.body.Registros[11].CodigoConfiguracaoLigacoes).to.be.equal(129);\n  expect(res.body.Registros[12].CodigoConfiguracaoLigacoes).to.be.equal(119);\n  expect(res.body.Registros[13].CodigoConfiguracaoLigacoes).to.be.equal(118);\n  expect(res.body.Registros[14].CodigoConfiguracaoLigacoes).to.be.equal(117);\n  expect(res.body.Registros[15].CodigoConfiguracaoLigacoes).to.be.equal(89);\n  expect(res.body.Registros[16].CodigoConfiguracaoLigacoes).to.be.equal(78);\n  expect(res.status).to.be.equal(200);\n});",
              "err": {},
              "uuid": "236163f5-94bb-4dcd-b495-29fceec39ac1",
              "parentUUID": "cda580e1-83a0-4524-8c84-c6ab4f5ee7cb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "deve recuperar uma configuração de ligação pelo código",
              "fullTitle": "MONITORIA deve recuperar uma configuração de ligação pelo código",
              "timedOut": null,
              "duration": 127,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.recuperaConfiguracaoLigacaoCodigo(TokenIntApp).then(res => {\n  expect(res.body.CodigoConfiguracaoLigacoes).to.be.equal(177);\n  expect(res.body.Ilha.Codigo).to.be.equal(2);\n  expect(res.body.Ilha.Descricao).to.be.equal('Ilha Master');\n  expect(res.body.QuantidadeLigacoesSaintes).to.be.equal(2);\n  expect(res.body.QuantidadeLigacoesEntrantes).to.be.equal(2);\n  expect(res.body.TotalDeHoras).to.be.equal(7200);\n  expect(res.body.Mes).to.be.equal(8);\n  expect(res.body.Ano).to.be.equal(2019);\n  expect(res.status).to.be.equal(200);\n});",
              "err": {},
              "uuid": "88f2cc35-a38a-4f95-9de6-17b0630c2b68",
              "parentUUID": "cda580e1-83a0-4524-8c84-c6ab4f5ee7cb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "deve editar uma configuração de ligação pelo código",
              "fullTitle": "MONITORIA deve editar uma configuração de ligação pelo código",
              "timedOut": null,
              "duration": 120,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.editaConfiguracaoLigacaoCodigo(TokenIntApp).then(res => {\n  expect(res.body.CodigoConfiguracaoLigacoes).to.be.equal(169);\n  expect(res.body.Ilha.Codigo).to.be.equal(3);\n  expect(res.body.Ilha.Descricao).to.be.equal('Ilha Atacado Novo');\n  expect(res.body.QuantidadeLigacoesSaintes).to.be.equal(2);\n  expect(res.body.QuantidadeLigacoesEntrantes).to.be.equal(2);\n  expect(res.body.TotalDeHoras).to.be.equal(7200);\n  expect(res.body.Mes).to.be.equal(7);\n  expect(res.body.Ano).to.be.equal(2019);\n  expect(res.status).to.be.equal(200);\n});",
              "err": {},
              "uuid": "b90c44b5-0a72-448f-8786-ff6892758ea1",
              "parentUUID": "cda580e1-83a0-4524-8c84-c6ab4f5ee7cb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "deve recuperar um indice de qualidade da monitoria pelo código",
              "fullTitle": "MONITORIA deve recuperar um indice de qualidade da monitoria pelo código",
              "timedOut": null,
              "duration": 145,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.recuperaIndiceQualidadeMonitoriaCodigo(TokenIntApp).then(res => {\n  expect(res.body.CodigoIndiceQualidade).to.be.equal(159);\n  expect(res.body.Ilha.Codigo).to.be.equal(15);\n  expect(res.body.Ilha.Descricao).to.be.equal('Ilha Prospecção Varejo');\n  expect(res.body.PercentualIndesejavel).to.be.equal(79);\n  expect(res.body.PercentualBom).to.be.equal(80);\n  expect(res.body.PercentualMuitoBom).to.be.equal(95);\n  expect(res.body.PercentualExcelente).to.be.equal(100);\n  expect(res.body.Mes).to.be.equal(6);\n  expect(res.body.Ano).to.be.equal(2019);\n  expect(res.status).to.be.equal(200);\n});",
              "err": {},
              "uuid": "74b8a0e8-d618-4775-a267-4be30b589c1f",
              "parentUUID": "cda580e1-83a0-4524-8c84-c6ab4f5ee7cb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "deve editar um indice de qualidade para a monitoria",
              "fullTitle": "MONITORIA deve editar um indice de qualidade para a monitoria",
              "timedOut": null,
              "duration": 190,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.editaIndiceQualidadeMonitoria(TokenIntApp).then(res => {\n  expect(res.body.CodigoIndiceQualidade).to.be.equal(135);\n  expect(res.body.Ilha.Codigo).to.be.equal(8);\n  expect(res.body.Ilha.Descricao).to.be.equal('Ilha Varejo Oficina');\n  expect(res.body.PercentualIndesejavel).to.be.equal(79);\n  expect(res.body.PercentualBom).to.be.equal(80);\n  expect(res.body.PercentualMuitoBom).to.be.equal(96);\n  expect(res.body.PercentualExcelente).to.be.equal(99);\n  expect(res.body.Mes).to.be.equal(3);\n  expect(res.body.Ano).to.be.equal(2019);\n  expect(res.status).to.be.equal(200);\n});",
              "err": {},
              "uuid": "84ef7a7d-42fc-4943-978b-3b3945dca70b",
              "parentUUID": "cda580e1-83a0-4524-8c84-c6ab4f5ee7cb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "deve excluir um indice de qualidade para a monitoria pelo código",
              "fullTitle": "MONITORIA deve excluir um indice de qualidade para a monitoria pelo código",
              "timedOut": null,
              "duration": 140,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.excluiIndiceQualidadeMonitoriaCodigo(TokenIntApp).then(res => {\n  expect(res.status).to.be.equal(200);\n});",
              "err": {},
              "uuid": "04f4802c-5fde-4dd0-a653-17ccfb479192",
              "parentUUID": "cda580e1-83a0-4524-8c84-c6ab4f5ee7cb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "deve recuperar uma lista dos indices de qualdiade da monitoria de acordo com os filtros informados",
              "fullTitle": "MONITORIA deve recuperar uma lista dos indices de qualdiade da monitoria de acordo com os filtros informados",
              "timedOut": null,
              "duration": 156,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.listaIndiceQualidadeMonitoria(TokenIntApp).then(res => {\n  expect(res.body.Total).to.be.equal(21);\n  expect(res.body.Registros.length).to.be.equal(21);\n  expect(res.status).to.be.equal(200);\n});",
              "err": {},
              "uuid": "66c6daf1-2d38-4460-92eb-a589c49fccd0",
              "parentUUID": "cda580e1-83a0-4524-8c84-c6ab4f5ee7cb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "deve inserir um novo indice de qualidade para a monitoria",
              "fullTitle": "MONITORIA deve inserir um novo indice de qualidade para a monitoria",
              "timedOut": null,
              "duration": 193,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.insereIndiceQualidadeMonitoria(TokenIntApp).then(res => {\n  expect(res.body.CodigoIndiceQualidade).to.be.equal(res.body.CodigoIndiceQualidade);\n  expect(res.body.Ilha.Codigo).to.be.equal(3);\n  expect(res.body.Ilha.Descricao).to.be.equal('Ilha Atacado Novo');\n  expect(res.body.PercentualIndesejavel).to.be.equal(75);\n  expect(res.body.PercentualBom).to.be.equal(82);\n  expect(res.body.PercentualMuitoBom).to.be.equal(89);\n  expect(res.body.PercentualExcelente).to.be.equal(100);\n  expect(res.body.Mes).to.be.equal(6);\n  expect(res.body.Ano).to.be.equal(2030);\n  expect(res.status).to.be.equal(201);\n});",
              "err": {},
              "uuid": "e8834dff-9e47-4fd2-bdb0-7e8e0d4d0737",
              "parentUUID": "cda580e1-83a0-4524-8c84-c6ab4f5ee7cb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "deve recuperar uma lista de papers de monitoria de acordo com os filtros informados",
              "fullTitle": "MONITORIA deve recuperar uma lista de papers de monitoria de acordo com os filtros informados",
              "timedOut": null,
              "duration": 164,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.recuperarListaPapers(TokenIntApp).then(res => {\n  expect(res.body.Total).to.be.equal(res.body.Total);\n  expect(res.body.Registros.length).to.be.equal(5);\n  expect(res.body.Registros[0].CodigoPaper).to.be.equal(26);\n  expect(res.body.Registros[1].CodigoPaper).to.be.equal(27);\n  expect(res.body.Registros[2].CodigoPaper).to.be.equal(29);\n  expect(res.body.Registros[3].CodigoPaper).to.be.equal(36);\n  expect(res.body.Registros[4].CodigoPaper).to.be.equal(37);\n  expect(res.status).to.be.equal(200);\n});",
              "err": {},
              "uuid": "916e9cfd-be69-4a36-900c-278eb4e53f63",
              "parentUUID": "cda580e1-83a0-4524-8c84-c6ab4f5ee7cb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "deve recuperar um paper de monitoria pelo código",
              "fullTitle": "MONITORIA deve recuperar um paper de monitoria pelo código",
              "timedOut": null,
              "duration": 200,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.recuperaPaperMonitoriaCodigo(TokenIntApp).then(res => {\n  expect(res.body.CodigoPaper).to.be.equal(37);\n  expect(res.body.DescricaoPaper).to.be.equal('ATACAREJO ENTRANTE');\n  expect(res.body.Status).to.be.equal('I');\n  expect(res.body.StatusDescricao).to.be.equal('Inativo');\n  expect(res.body.TipoLigacao).to.be.equal('E');\n  expect(res.body.TipoLigacaoDescricao).to.be.equal('Entrante');\n  expect(res.body.Criterios.length).to.be.equal(21);\n  expect(res.status).to.be.equal(200);\n});",
              "err": {},
              "uuid": "5dc9ba78-7425-444c-9bd0-1457a9158e36",
              "parentUUID": "cda580e1-83a0-4524-8c84-c6ab4f5ee7cb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "deve editar um paper de monitoria existente pelo código",
              "fullTitle": "MONITORIA deve editar um paper de monitoria existente pelo código",
              "timedOut": null,
              "duration": 333,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.editaPaperMonitoria(TokenIntApp).then(res => {\n  expect(res.body.CodigoPaper).to.be.equal(29);\n  expect(res.body.DescricaoPaper).to.be.equal('TESTE QA');\n  expect(res.body.Status).to.be.equal('I');\n  expect(res.body.StatusDescricao).to.be.equal('Inativo');\n  expect(res.body.TipoLigacao).to.be.equal('E');\n  expect(res.body.TipoLigacaoDescricao).to.be.equal('Entrante');\n  expect(res.status).to.be.equal(200);\n});",
              "err": {},
              "uuid": "4e2530d6-84cf-4a56-bc29-20247faff6ba",
              "parentUUID": "cda580e1-83a0-4524-8c84-c6ab4f5ee7cb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "deve copiar um paper ja cadastrado",
              "fullTitle": "MONITORIA deve copiar um paper ja cadastrado",
              "timedOut": null,
              "duration": 1261,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.copiaPaperCadastrado(TokenIntApp).then(res => {\n  expect(res.body.CodigoPaper).to.be.equal(res.body.CodigoPaper);\n  expect(res.body.DescricaoPaper).to.be.equal('BALCÃO A / BALCÃO B  08/19 - ( Cópia )');\n  expect(res.body.Status).to.be.equal('I');\n  expect(res.body.StatusDescricao).to.be.equal('Inativo');\n  expect(res.body.TipoLigacao).to.be.equal('E');\n  expect(res.body.TipoLigacaoDescricao).to.be.equal('Entrante');\n  expect(res.status).to.be.equal(200);\n});",
              "err": {},
              "uuid": "b1e98e8a-b375-4899-9264-e7ee2c6c9435",
              "parentUUID": "cda580e1-83a0-4524-8c84-c6ab4f5ee7cb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "deve excluir um criterio do paper ",
              "fullTitle": "MONITORIA deve excluir um criterio do paper ",
              "timedOut": null,
              "duration": 179,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.excluiCriterioPaper(TokenIntApp).then(res => {\n  expect(res.status).to.be.equal(200);\n});",
              "err": {},
              "uuid": "bf95a089-2c1e-4809-ba21-1ef9b14df7ff",
              "parentUUID": "cda580e1-83a0-4524-8c84-c6ab4f5ee7cb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "deve recuperar uma lista de blocos de monitoria de acordo com os filtros informados",
              "fullTitle": "MONITORIA deve recuperar uma lista de blocos de monitoria de acordo com os filtros informados",
              "timedOut": null,
              "duration": 166,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.recuperaBlocoListaMonitoria(TokenIntApp).then(res => {\n  expect(res.body.Registros.length).to.be.exist.value;\n  expect(res.status).to.be.equal(200);\n});",
              "err": {},
              "uuid": "9a487a7b-5ec6-4d40-bfc8-1ef9678a4e71",
              "parentUUID": "cda580e1-83a0-4524-8c84-c6ab4f5ee7cb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "deve recuperar um bloco de monitoria pelo código",
              "fullTitle": "MONITORIA deve recuperar um bloco de monitoria pelo código",
              "timedOut": null,
              "duration": 109,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.recuperaBlocoMonitoriaCodigo(TokenIntApp).then(res => {\n  expect(res.body.CodigoBloco).to.be.equal(34);\n  expect(res.body.DescricaoBloco).to.be.equal('TESTE QUALIDADE');\n  expect(res.body.Status).to.be.equal('A');\n  expect(res.body.StatusDescricao).to.be.equal('Ativo');\n  expect(res.status).to.be.equal(200);\n});",
              "err": {},
              "uuid": "101e9e2d-a9fc-489f-923b-983688ace632",
              "parentUUID": "cda580e1-83a0-4524-8c84-c6ab4f5ee7cb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "deve editar um bloco de monitoria existente pelo código",
              "fullTitle": "MONITORIA deve editar um bloco de monitoria existente pelo código",
              "timedOut": null,
              "duration": 189,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.editaBlocoMonitoriaCodigo(TokenIntApp).then(res => {\n  expect(res.body.CodigoBloco).to.be.equal(34);\n  expect(res.body.DescricaoBloco).to.be.equal('TESTE QUALIDADE');\n  expect(res.body.Status).to.be.equal('A');\n  expect(res.body.StatusDescricao).to.be.equal('Ativo');\n  expect(res.status).to.be.equal(200);\n});",
              "err": {},
              "uuid": "40b0db82-8f3e-415f-99a0-9bc710aec050",
              "parentUUID": "cda580e1-83a0-4524-8c84-c6ab4f5ee7cb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "deve inserir e excluir um bloco de monitoria",
              "fullTitle": "MONITORIA deve inserir e excluir um bloco de monitoria",
              "timedOut": null,
              "duration": 399,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.insereBlocoMonitoria(TokenIntApp).then(res => {\n  codMonitoria = res.body.CodigoBloco;\n  expect(res.status).to.be.equal(201);\n  cy.excluiBlocoMonitoriaCodigo(TokenIntApp, codMonitoria).then(res => {\n    console.log(codMonitoria);\n    expect(res.status).to.be.equal(200);\n  });\n});\nit('deve recuperar uma lista de critérios de monitoria de acordo com os filtros informados', () => {\n  cy.recuperaListaCriterioMonitoria(TokenIntApp).then(res => {\n    expect(res.body.Registros[0].CodigoCriterio).to.be.equal(224);\n    expect(res.body.Registros[0].DescricaoCriterio).to.be.equal('SAUDAR E CUMPRIMENTAR');\n    expect(res.body.Registros[1].CodigoCriterio).to.be.equal(225);\n    expect(res.body.Registros[1].DescricaoCriterio).to.be.equal('SUPERAR OBJEÇÃO/SONDAR');\n    expect(res.body.Registros[2].CodigoCriterio).to.be.equal(226);\n    expect(res.body.Registros[2].DescricaoCriterio).to.be.equal('LEVANTAR NECESSIDADES');\n    expect(res.body.Registros[3].CodigoCriterio).to.be.equal(227);\n    expect(res.body.Registros[3].DescricaoCriterio).to.be.equal('OFERTAR');\n    expect(res.body.Registros[4].CodigoCriterio).to.be.equal(228);\n    expect(res.body.Registros[4].DescricaoCriterio).to.be.equal('DEMONSTRAR CONHECIMENTO');\n    expect(res.status).to.be.equal(200);\n  });\n});\nit('deve inserir um novo critério monitoria', () => {\n  cy.insereCriterioMonitoria(TokenIntApp).then(res => {\n    expect(res.body.CodigoCriterio).to.be.equal(res.body.CodigoCriterio);\n    expect(res.body.DescricaoCriterio).to.be.equal('TESTE');\n    expect(res.body.Bloco.Codigo).to.be.equal(15);\n    expect(res.body.Bloco.Descricao).to.be.equal('FALHA GRAVE');\n    expect(res.body.Peso).to.be.equal(0);\n    expect(res.body.FalhaGrave).to.be.equal('S');\n    expect(res.body.FalhaGraveDescricao).to.be.equal('Sim');\n    expect(res.status).to.be.equal(201);\n  });\n});\nit('deve recuperar um critério de monitoria pelo código', () => {\n  cy.recuperaCriterioMonitoriaCodigo(TokenIntApp).then(res => {\n    expect(res.status).to.be.equal(200);\n  });\n});\nit('deve editar um critério de monitoria existente pelo código', () => {\n  cy.editaCriterioMonitoriaCodigo(TokenIntApp).then(res => {\n    expect(res.body.CodigoCriterio).to.be.equal(3957);\n    expect(res.body.DescricaoCriterio).to.be.equal('CRITERIO MONITORIA TESTE');\n    expect(res.body.Bloco.Codigo).to.be.equal(14);\n    expect(res.body.Bloco.Descricao).to.be.equal('FECHAMENTO');\n    expect(res.body.Peso).to.be.equal(0);\n    expect(res.body.FalhaGrave).to.be.equal('S');\n    expect(res.status).to.be.equal(200);\n  });\n});\nit('deve excluir um critério monitoria pelo código', () => {\n  cy.excluiCriterioMonitoria(TokenIntApp).then(res => {\n    expect(res.body.Message).to.be.equal('Critério nº 4160 informado(a) não foi encontrado(a)');\n    expect(res.status).to.be.equal(400);\n  });\n});\nit('deve recuperar uma lista de avaliações de acordo com os filtros informados', () => {\n  cy.recuperaListaAvaliacao(TokenIntApp).then(res => {\n    expect(res.body.Total).to.exist.value;\n    expect(res.body.Registros.length).to.exist.value;\n    expect(res.status).to.be.equal(200);\n  });\n});\nit('deve recuperar uma determinada avaliação pelo seu código', () => {\n  cy.recuperaAvaliacaoCodigo(TokenIntApp).then(res => {\n    expect(res.body.CodigoAvaliacao).to.exist.value;\n    expect(res.body.UsuarioAvaliado.Codigo).to.exist.value;\n    expect(res.body.UsuarioSupervisor.Codigo).to.exist.value;\n    expect(res.body.UsuarioMonitor.Codigo).to.exist.value;\n    expect(res.status).to.be.equal(200);\n  });\n});\nit('deve excluir uma avaliação pelo seu código', () => {\n  cy.recuperaAvaliacaoCodigo(TokenIntApp).then(res => {\n    expect(res.status).to.be.equal(200);\n    cy.excluiAvaliacaoCodigo(TokenIntApp).then(res => {\n      expect(res.status).to.be.equal(200);\n    });\n  });\n});\nit('deve recuperar os dados de uma ligação de acordo com o UCID informado', () => {\n  cy.recuperaDadosLogacaoUcid(TokenIntApp).then(res => {\n    expect(res.body.Ucid).to.exist;\n    expect(res.body.TempoDeLigacao).to.exist;\n    expect(res.body.UsuarioAvaliado.Codigo).to.exist;\n    expect(res.body.UsuarioAvaliado.Descricao).to.exist;\n    expect(res.body.UsuarioSupervisor.Codigo).to.exist;\n    expect(res.body.UsuarioSupervisor.Descricao).to.exist;\n    expect(res.status).to.be.equal(200);\n  });\n});\nit('deve retornar uma lista de critérios de uma determinada avaliação', () => {\n  cy.listaCriteriosAvalizacao(TokenIntApp).then(res => {\n    expect(res.body.Total).to.be.equal(20);\n    expect(res.body.Registros.length).to.be.equal(20);\n    expect(res.status).to.be.equal(200);\n  });\n});",
              "err": {},
              "uuid": "8d78a14f-75fa-4fd3-844e-f6a76a40e91a",
              "parentUUID": "cda580e1-83a0-4524-8c84-c6ab4f5ee7cb",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "71d90ce9-9bd6-411e-8e2a-dc3058909768",
            "65ddddbb-ab2f-4f03-900c-3a13c59b8f1c",
            "2ec1f580-a2a8-4923-93fe-366400c81afd",
            "8c44f0d9-a2ea-49ce-be71-b7f7eb5b725c",
            "41e49ab1-5d56-4a8e-bb17-97a1212df5d7",
            "236163f5-94bb-4dcd-b495-29fceec39ac1",
            "88f2cc35-a38a-4f95-9de6-17b0630c2b68",
            "b90c44b5-0a72-448f-8786-ff6892758ea1",
            "74b8a0e8-d618-4775-a267-4be30b589c1f",
            "84ef7a7d-42fc-4943-978b-3b3945dca70b",
            "04f4802c-5fde-4dd0-a653-17ccfb479192",
            "66c6daf1-2d38-4460-92eb-a589c49fccd0",
            "e8834dff-9e47-4fd2-bdb0-7e8e0d4d0737",
            "916e9cfd-be69-4a36-900c-278eb4e53f63",
            "5dc9ba78-7425-444c-9bd0-1457a9158e36",
            "4e2530d6-84cf-4a56-bc29-20247faff6ba",
            "b1e98e8a-b375-4899-9264-e7ee2c6c9435",
            "bf95a089-2c1e-4809-ba21-1ef9b14df7ff",
            "9a487a7b-5ec6-4d40-bfc8-1ef9678a4e71",
            "101e9e2d-a9fc-489f-923b-983688ace632",
            "40b0db82-8f3e-415f-99a0-9bc710aec050",
            "8d78a14f-75fa-4fd3-844e-f6a76a40e91a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 5602,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "dc6ce7a1-cacd-4238-bcf2-f2cfa6ebb478",
      "title": "",
      "fullFile": "parametrizacao/specs/parametrizacao.spec.js",
      "file": "parametrizacao/specs/parametrizacao.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "c4d1b5ed-6fd9-46f3-8136-f488928ef98c",
          "title": "PARAMETRIZAÇÃO",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "deve listar os contratantes ativos",
              "fullTitle": "PARAMETRIZAÇÃO deve listar os contratantes ativos",
              "timedOut": null,
              "duration": 461,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.listaContratantesAtivos(TokenIntApp).then(res => {\n  expect(res.body[0].CodigoContratanteAnexo).to.be.equal(0);\n  expect(res.body[0].CodigoContratante).to.be.equal(114);\n  expect(res.body[0].NomeContratante).to.be.equal('ASSOCIACAO PROTETORA VEICULOS AUTOMOTORES -PROAUTO');\n  expect(res.body[0].CodigoAnexo).to.be.equal(0);\n  expect(res.status).to.be.equal(200);\n});",
              "err": {},
              "uuid": "d6ce113a-1faa-4143-b68e-0a2220b9628c",
              "parentUUID": "c4d1b5ed-6fd9-46f3-8136-f488928ef98c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "deve listar os contratantes ativos do tipo associação",
              "fullTitle": "PARAMETRIZAÇÃO deve listar os contratantes ativos do tipo associação",
              "timedOut": null,
              "duration": 151,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.listaContratantesAtivosAssociacao(TokenIntApp).then(res => {\n  expect(res.body.CodigoContratanteAnexo).to.be.equal(4);\n  expect(res.body.CodigoContratante).to.be.equal(114);\n  expect(res.body.NomeContratante).to.be.equal('ASSOCIACAO PROTETORA VEICULOS AUTOMOTORES -PROAUTO');\n  expect(res.body.CodigoAnexo).to.be.equal(36);\n  expect(res.status).to.be.equal(200);\n});",
              "err": {},
              "uuid": "2a596277-b371-466e-a595-f1a79c53ab8c",
              "parentUUID": "c4d1b5ed-6fd9-46f3-8136-f488928ef98c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "deve listar anexos",
              "fullTitle": "PARAMETRIZAÇÃO deve listar anexos",
              "timedOut": null,
              "duration": 153,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.listaAnexos(TokenIntApp).then(res => {\n  expect(res.body.length).to.be.equal(res.body.length);\n  expect(res.status).to.be.equal(200);\n});",
              "err": {},
              "uuid": "84107d19-8a54-491c-b426-00cb57be4b50",
              "parentUUID": "c4d1b5ed-6fd9-46f3-8136-f488928ef98c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "d6ce113a-1faa-4143-b68e-0a2220b9628c",
            "2a596277-b371-466e-a595-f1a79c53ab8c",
            "84107d19-8a54-491c-b426-00cb57be4b50"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 765,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "2752362e-91b7-4d6c-a8be-82bd401a0ec3",
      "title": "",
      "fullFile": "pausas nr17 ceven/specs/pausasNr17Ceven.spec.js",
      "file": "pausas nr17 ceven/specs/pausasNr17Ceven.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "2a02c030-e1df-45a2-9204-cb5cab1608d7",
          "title": "PAUSAS NR17 CEVEN",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "deve retornar uma lista de equipes com o status do aviso da pausa NR17",
              "fullTitle": "PAUSAS NR17 CEVEN deve retornar uma lista de equipes com o status do aviso da pausa NR17",
              "timedOut": null,
              "duration": 423,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.retornaListaEquipePausaNR17().then(res => {\n  expect(res.status).to.be.equal(200);\n});",
              "err": {},
              "uuid": "d71b64d4-e6b3-4d96-b835-192e1ffb505a",
              "parentUUID": "2a02c030-e1df-45a2-9204-cb5cab1608d7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "deve recuperar as informações de pausas de uma determinada equipe",
              "fullTitle": "PAUSAS NR17 CEVEN deve recuperar as informações de pausas de uma determinada equipe",
              "timedOut": null,
              "duration": 124,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.recuperaInformacoesEquipe().then(res => {\n  expect(res.body.Registros[0].CodigoEquipe).to.be.equal(3);\n  expect(res.body.Registros[0].DescricaoEquipe).to.be.equal('EQUIPE MASTER - ANDERSON SILVA');\n  expect(res.body.Registros[0].StatusAvisoPausa).to.be.equal('ATIVO');\n  expect(res.body.Registros[0].IntervaloAvisoPausa).to.be.equal(0);\n  expect(res.status).to.be.equal(200);\n});",
              "err": {},
              "uuid": "b7485c31-47c8-4ff2-a4a0-9cc852f12193",
              "parentUUID": "2a02c030-e1df-45a2-9204-cb5cab1608d7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "deve atualizar o intervalo de aviso de pausas NR17 de uma determinada equipe",
              "fullTitle": "PAUSAS NR17 CEVEN deve atualizar o intervalo de aviso de pausas NR17 de uma determinada equipe",
              "timedOut": null,
              "duration": 271,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.atualizaIntervaloPausas().then(res => {\n  expect(res.body.CodigoEquipe).to.be.equal(1);\n  expect(res.body.DescricaoEquipe).to.be.equal('EQUIPE MASTER - MAICON');\n  expect(res.body.StatusAvisoPausa).to.be.equal('ATIVO');\n  expect(res.body.IntervaloAvisoPausa).to.be.equal(7200);\n});",
              "err": {},
              "uuid": "c031eac6-d7dd-4e32-b355-b7e47a7bc683",
              "parentUUID": "2a02c030-e1df-45a2-9204-cb5cab1608d7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "deve inativar e ativar as pausas dos vendedores",
              "fullTitle": "PAUSAS NR17 CEVEN deve inativar e ativar as pausas dos vendedores",
              "timedOut": null,
              "duration": 299,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.inativarPausas().then(res => {\n  expect(res.status).to.be.equal(200);\n  cy.ativarPausas().then(res => {\n    expect(res.status).to.be.equal(200);\n  });\n});",
              "err": {},
              "uuid": "6706a995-5457-442c-a333-9c2e5da819eb",
              "parentUUID": "2a02c030-e1df-45a2-9204-cb5cab1608d7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "deve retornar uma lista de vendedores de uma equipe com os horários da pausa NR17",
              "fullTitle": "PAUSAS NR17 CEVEN deve retornar uma lista de vendedores de uma equipe com os horários da pausa NR17",
              "timedOut": null,
              "duration": 128,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.retornaListaVendedoresComHorariosPausa().then(res => {\n  expect(res.body.length).to.be.exist;\n  expect(res.status).to.be.equal(200);\n});",
              "err": {},
              "uuid": "f000fc3d-7919-4ec4-b4a8-b3e66851a611",
              "parentUUID": "2a02c030-e1df-45a2-9204-cb5cab1608d7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "deve atualizar as informações de pausa dos vendedores",
              "fullTitle": "PAUSAS NR17 CEVEN deve atualizar as informações de pausa dos vendedores",
              "timedOut": null,
              "duration": 200,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.atualizaInformacoesPausaVendedores().then(res => {\n  expect(res.status).to.be.equal(200);\n});",
              "err": {},
              "uuid": "daa7d02b-1447-4789-ad28-b026091b3581",
              "parentUUID": "2a02c030-e1df-45a2-9204-cb5cab1608d7",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "d71b64d4-e6b3-4d96-b835-192e1ffb505a",
            "b7485c31-47c8-4ff2-a4a0-9cc852f12193",
            "c031eac6-d7dd-4e32-b355-b7e47a7bc683",
            "6706a995-5457-442c-a333-9c2e5da819eb",
            "f000fc3d-7919-4ec4-b4a8-b3e66851a611",
            "daa7d02b-1447-4789-ad28-b026091b3581"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1445,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "829d0ba8-c50a-41a7-b2d8-3d00e71d7aaf",
      "title": "",
      "fullFile": "programaEnvioNps/specs/programaEnvioNps.spec.js",
      "file": "programaEnvioNps/specs/programaEnvioNps.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "32af5997-7cb7-4297-af92-7b21cb5316a6",
          "title": "PROGRAMA ENVIO NPS",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "deve inserir uma data de envio nps",
              "fullTitle": "PROGRAMA ENVIO NPS deve inserir uma data de envio nps",
              "timedOut": null,
              "duration": 657,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.insereDataEnvioNps(TokenIntApp).then(res => {\n  codEnvio = res.body.CodigoEnvio;\n  expect(res.status).to.be.equal(200);\n});",
              "err": {},
              "uuid": "4468d96c-cf2f-41a6-864c-7c290363ecea",
              "parentUUID": "32af5997-7cb7-4297-af92-7b21cb5316a6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "deve atualizar as informações de pausa dos vendedores",
              "fullTitle": "PROGRAMA ENVIO NPS deve atualizar as informações de pausa dos vendedores",
              "timedOut": null,
              "duration": 182,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.atualizaInformacoesPausaVendedoress(TokenIntApp, codEnvio).then(res => {\n  expect(res.status).to.be.equal(200);\n});",
              "err": {},
              "uuid": "32c2fa58-68e9-44b8-b792-a7c85713dd10",
              "parentUUID": "32af5997-7cb7-4297-af92-7b21cb5316a6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "deve retornar uma lista de datas programadas para envio de nps",
              "fullTitle": "PROGRAMA ENVIO NPS deve retornar uma lista de datas programadas para envio de nps",
              "timedOut": null,
              "duration": 142,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.listaDatasProgramadas(TokenIntApp).then(res => {\n  expect(res.body.Registros.length).to.be.exist;\n  expect(res.body.Registros.length).is.not.equal(0);\n  expect(res.status).to.be.equal(200);\n});",
              "err": {},
              "uuid": "78ef3f9a-d66b-40f4-8d83-d5ebd64e6bf4",
              "parentUUID": "32af5997-7cb7-4297-af92-7b21cb5316a6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "deve excluir data de envio nps",
              "fullTitle": "PROGRAMA ENVIO NPS deve excluir data de envio nps",
              "timedOut": null,
              "duration": 285,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.insereDataEnvioNps(TokenIntApp).then(res => {\n  cy.excluiNps(TokenIntApp, codEnvio).then(res => {\n    expect(res.status).to.be.equal(200);\n  });\n});",
              "err": {},
              "uuid": "5060a81e-4bae-4368-8c23-4e04346614a1",
              "parentUUID": "32af5997-7cb7-4297-af92-7b21cb5316a6",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "4468d96c-cf2f-41a6-864c-7c290363ecea",
            "32c2fa58-68e9-44b8-b792-a7c85713dd10",
            "78ef3f9a-d66b-40f4-8d83-d5ebd64e6bf4",
            "5060a81e-4bae-4368-8c23-4e04346614a1"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1266,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "6a61da17-0285-479b-b7c2-df6574097e41",
      "title": "",
      "fullFile": "tipo concorrente/specs/tipoconcorrente.spec.js",
      "file": "tipo concorrente/specs/tipoconcorrente.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "b07a0943-3eba-4f65-825e-02a1e9ea9066",
          "title": "TIPO CONCORRENTE",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "deve listar os tipos de concorrentes",
              "fullTitle": "TIPO CONCORRENTE deve listar os tipos de concorrentes",
              "timedOut": null,
              "duration": 684,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.tipoConcorrente(TokenIntApp).then(res => {\n  expect(res.body.length).to.be.equal(res.body.length);\n  expect(res.body[0].CodigoTipoConcorrente).to.be.equal(1);\n  expect(res.body[0].DescricaoTipoConcorrente).to.be.equal('Concessionária');\n  expect(res.body[1].CodigoTipoConcorrente).to.be.equal(2);\n  expect(res.body[1].DescricaoTipoConcorrente).to.be.equal('Distribuidor');\n  expect(res.body[2].CodigoTipoConcorrente).to.be.equal(3);\n  expect(res.body[2].DescricaoTipoConcorrente).to.be.equal('Fabricante');\n  expect(res.status).to.be.equal(200);\n});",
              "err": {},
              "uuid": "887d30f3-fc1e-41e9-9857-54ee23bfbd35",
              "parentUUID": "b07a0943-3eba-4f65-825e-02a1e9ea9066",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "887d30f3-fc1e-41e9-9857-54ee23bfbd35"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 684,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "d7396146-8385-4f18-8278-3dc43569acf7",
      "title": "",
      "fullFile": "venda seguradora/specs/vendaSeguradora.spec.js",
      "file": "venda seguradora/specs/vendaSeguradora.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "b6235245-f472-4595-8942-aaed651e32aa",
          "title": "VENDA SEGURADORA",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "deve listar as formas de pagamento da seguradora",
              "fullTitle": "VENDA SEGURADORA deve listar as formas de pagamento da seguradora",
              "timedOut": null,
              "duration": 893,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.listaFormaPagamentoSeguradora(TokenIntApp).then(res => {\n  expect(res.body.length).to.be.equal(res.body.length);\n  expect(res.body[0].CodigoTipoPagamento).to.be.equal(2);\n  expect(res.body[0].DescricaoTipoPagamento).to.be.equal('CHEQUE A VISTA');\n  expect(res.body[1].CodigoTipoPagamento).to.be.equal(4);\n  expect(res.body[1].DescricaoTipoPagamento).to.be.equal('DINHEIRO');\n  expect(res.body[2].CodigoTipoPagamento).to.be.equal(6);\n  expect(res.body[2].DescricaoTipoPagamento).to.be.equal('CARTAO DE CRÉDITO');\n  expect(res.body[3].CodigoTipoPagamento).to.be.equal(8);\n  expect(res.body[3].DescricaoTipoPagamento).to.be.equal('CARTAO DE DÉBITO');\n  expect(res.body[4].CodigoTipoPagamento).to.be.equal(9);\n  expect(res.body[4].DescricaoTipoPagamento).to.be.equal('VISA ELECTRON');\n  expect(res.body[5].CodigoTipoPagamento).to.be.equal(10);\n  expect(res.body[5].DescricaoTipoPagamento).to.be.equal('REDESHOP');\n});",
              "err": {},
              "uuid": "88d6b8da-efc0-49db-a620-8cfdc2b40a66",
              "parentUUID": "b6235245-f472-4595-8942-aaed651e32aa",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "88d6b8da-efc0-49db-a620-8cfdc2b40a66"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 893,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "a824f760-bd17-4383-bb27-16b4708610a9",
      "title": "",
      "fullFile": "venda weeb/specs/vendaWeb.spec.js",
      "file": "venda weeb/specs/vendaWeb.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "e625f073-8700-4934-88a7-3e042b60e055",
          "title": "VENDAS WEB",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "deve recuperar a lista de tipo de peças do portal de aplicações",
              "fullTitle": "VENDAS WEB deve recuperar a lista de tipo de peças do portal de aplicações",
              "timedOut": null,
              "duration": 213239,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.getListapecasPortalAplicacao(TokenIntApp).then(res => {\n  expect(res.body.Total).to.be.equal(0);\n  expect(res.body.Registros[0]).to.be.equal(undefined);\n  expect(res.status).to.be.equal(200);\n});",
              "err": {
                "message": "CypressError: `cy.request()` failed trying to load:\n\nhttps://api-int-hml.autoglass.com.br/portal-do-cliente-hub-api/api/autenticacoes\n\nWe attempted to make an http request to this URL but the request failed without a response.\n\nWe received this error at the network level:\n\n  > Error: read ETIMEDOUT\n\n-----------------------------------------------------------\n\nThe request we sent was:\n\nMethod: POST\nURL: https://api-int-hml.autoglass.com.br/portal-do-cliente-hub-api/api/autenticacoes\n\n-----------------------------------------------------------\n\nCommon situations why this would fail:\n  - you don't have internet access\n  - you forgot to run / boot your web server\n  - your web server isn't accessible\n  - you have weird network configuration settings on your computer\n\nhttps://on.cypress.io/request\n\nBecause this error occurred during a `before all` hook we are skipping the remaining tests in the current suite: `VENDAS WEB`",
                "estack": "CypressError: `cy.request()` failed trying to load:\n\nhttps://api-int-hml.autoglass.com.br/portal-do-cliente-hub-api/api/autenticacoes\n\nWe attempted to make an http request to this URL but the request failed without a response.\n\nWe received this error at the network level:\n\n  > Error: read ETIMEDOUT\n\n-----------------------------------------------------------\n\nThe request we sent was:\n\nMethod: POST\nURL: https://api-int-hml.autoglass.com.br/portal-do-cliente-hub-api/api/autenticacoes\n\n-----------------------------------------------------------\n\nCommon situations why this would fail:\n  - you don't have internet access\n  - you forgot to run / boot your web server\n  - your web server isn't accessible\n  - you have weird network configuration settings on your computer\n\nhttps://on.cypress.io/request\n\nBecause this error occurred during a `before all` hook we are skipping the remaining tests in the current suite: `VENDAS WEB`\n    at https://api-int-hml.autoglass.com.br/__cypress/runner/cypress_runner.js:160688:78\n    at tryCatcher (https://api-int-hml.autoglass.com.br/__cypress/runner/cypress_runner.js:13022:23)\n    at https://api-int-hml.autoglass.com.br/__cypress/runner/cypress_runner.js:8161:37\n    at tryCatcher (https://api-int-hml.autoglass.com.br/__cypress/runner/cypress_runner.js:13022:23)\n    at Promise._settlePromiseFromHandler (https://api-int-hml.autoglass.com.br/__cypress/runner/cypress_runner.js:10957:31)\n    at Promise._settlePromise (https://api-int-hml.autoglass.com.br/__cypress/runner/cypress_runner.js:11014:18)\n    at Promise._settlePromise0 (https://api-int-hml.autoglass.com.br/__cypress/runner/cypress_runner.js:11059:10)\n    at Promise._settlePromises (https://api-int-hml.autoglass.com.br/__cypress/runner/cypress_runner.js:11135:18)\n    at _drainQueueStep (https://api-int-hml.autoglass.com.br/__cypress/runner/cypress_runner.js:7729:12)\n    at _drainQueue (https://api-int-hml.autoglass.com.br/__cypress/runner/cypress_runner.js:7722:9)\n    at Async.../../node_modules/bluebird/js/release/async.js.Async._drainQueues (https://api-int-hml.autoglass.com.br/__cypress/runner/cypress_runner.js:7738:5)\n    at Async.drainQueues (https://api-int-hml.autoglass.com.br/__cypress/runner/cypress_runner.js:7608:14)\nFrom Your Spec Code:\n    at Context.eval (https://api-int-hml.autoglass.com.br/__cypress/tests?p=index.js:2253:6)\n\nFrom Node.js Internals:\n  RequestError: Error: read ETIMEDOUT\n      at new RequestError (/var/lib/jenkins/.cache/Cypress/9.5.2/Cypress/resources/app/node_modules/request-promise-core/lib/errors.js:14:15)\n      at Request.plumbing.callback (/var/lib/jenkins/.cache/Cypress/9.5.2/Cypress/resources/app/node_modules/request-promise-core/lib/plumbing.js:87:29)\n      at Request.RP$callback [as _callback] (/var/lib/jenkins/.cache/Cypress/9.5.2/Cypress/resources/app/node_modules/request-promise-core/lib/plumbing.js:46:31)\n      at self.callback (/var/lib/jenkins/.cache/Cypress/9.5.2/Cypress/resources/app/node_modules/@cypress/request/request.js:183:22)\n      at Request.emit (node:events:394:28)\n      at Request.onRequestError (/var/lib/jenkins/.cache/Cypress/9.5.2/Cypress/resources/app/node_modules/@cypress/request/request.js:869:8)\n      at ClientRequest.emit (node:events:394:28)\n      at TLSSocket.socketErrorListener (node:_http_client:447:9)\n      at TLSSocket.emit (node:events:394:28)\n      at emitErrorNT (node:internal/streams/destroy:157:8)\n      at emitErrorCloseNT (node:internal/streams/destroy:122:3)\n      at processTicksAndRejections (node:internal/process/task_queues:83:21)\n  ",
                "diff": null
              },
              "uuid": "27137e6f-164b-4eb9-8b09-493e0d2184aa",
              "parentUUID": "e625f073-8700-4934-88a7-3e042b60e055",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "deve inserir um tipo de peça",
              "fullTitle": "VENDAS WEB deve inserir um tipo de peça",
              "timedOut": null,
              "duration": 0,
              "state": "skipped",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.insereTipoPeca(TokenIntApp).then(res => {\n  let codPeca = res.body.CodigoTipoPeca;\n  expect(res.body.CodigoTipoPeca).to.be.equal(codPeca);\n  expect(res.body.Descricao).to.exist;\n  expect(res.body.CodigoSegmentoProduto).to.exist;\n  expect(res.body.CodigoSegmentoTipoProduto).to.exist;\n  expect(res.status).to.be.equal(200);\n  cy.excluiTipoPeca(TokenIntApp, codPeca).then(res => {\n    expect(res.body).to.is.empty;\n    expect(res.status).to.be.equal(200);\n  });\n});",
              "err": {},
              "uuid": "ed77c87b-9a56-4147-b83b-2898ff0740b9",
              "parentUUID": "e625f073-8700-4934-88a7-3e042b60e055",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "deve recuperar tipo de peça para o portal de aplicações",
              "fullTitle": "VENDAS WEB deve recuperar tipo de peça para o portal de aplicações",
              "timedOut": null,
              "duration": 0,
              "state": "skipped",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.insereTipoPeca(TokenIntApp).then(res => {\n  let codPeca = res.body.CodigoTipoPeca;\n  cy.getTipoPecaPortalAplicacoes(TokenIntApp, codPeca).then(res => {\n    expect(res.body.CodigoTipoPeca).to.be.equal(codPeca);\n    expect(res.body.Descricao).to.exist;\n    expect(res.body.CodigoSegmentoProduto).to.exist;\n    expect(res.body.CodigoSegmentoTipoProduto).to.exist;\n    expect(res.status).to.be.equal(200);\n  });\n});",
              "err": {},
              "uuid": "00ee810b-757a-45a8-9ad5-4a3bfb39e54c",
              "parentUUID": "e625f073-8700-4934-88a7-3e042b60e055",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "deve alterar um tipo de peça",
              "fullTitle": "VENDAS WEB deve alterar um tipo de peça",
              "timedOut": null,
              "duration": 0,
              "state": "skipped",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.insereTipoPeca(TokenIntApp).then(res => {\n  let codPeca = res.body.CodigoTipoPeca;\n  cy.alteraTipoPeca(TokenIntApp, codPeca).then(res => {\n    expect(res.body.CodigoTipoPeca).to.be.equal(codPeca);\n    expect(res.body.Descricao).to.be.equal('Teste Qualidade 2');\n    expect(res.body.CodigoSegmentoProduto).to.be.equal(119);\n    expect(res.body.CodigoSegmentoTipoProduto).to.be.equal(151);\n    expect(res.status).to.be.equal(200);\n    cy.excluiTipoPeca(TokenIntApp, codPeca).then(res => {\n      expect(res.body).to.is.empty;\n      expect(res.status).to.be.equal(200);\n    });\n  });\n});",
              "err": {},
              "uuid": "72887a67-9e31-4339-b474-b90b81bde906",
              "parentUUID": "e625f073-8700-4934-88a7-3e042b60e055",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "deve excluir um tipo de peça",
              "fullTitle": "VENDAS WEB deve excluir um tipo de peça",
              "timedOut": null,
              "duration": 0,
              "state": "skipped",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.insereTipoPeca(TokenIntApp).then(res => {\n  let codPeca = res.body.CodigoTipoPeca;\n  cy.excluiTipoPeca(TokenIntApp, codPeca).then(res => {\n    expect(res.body).to.be.equal('');\n    expect(res.status).to.be.equal(200);\n  });\n});",
              "err": {},
              "uuid": "60856bff-d3fb-4641-8892-bec63ae29d17",
              "parentUUID": "e625f073-8700-4934-88a7-3e042b60e055",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "deve recuperar a venda seguradora produto",
              "fullTitle": "VENDAS WEB deve recuperar a venda seguradora produto",
              "timedOut": null,
              "duration": 0,
              "state": "skipped",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.recuperavendaSeguradoraProduto(TokenPortalInterno).then(res => {\n  // expect(res.body.Codigo).to.be.equal(323822)\n  // expect(res.body.Descricao).to.be.equal('FAROL PRINCIPAL VOLKSWAGEN GOL GERAÇÃO 4 2006/2009 3 PORTAS/5 PORTAS CROMADO DIR...')\n  // expect(res.body.ImagensProduto.length).to.exist\n  // expect(res.status).to.be.equal(200)\n  console.log(res.body);\n});",
              "err": {},
              "uuid": "abec0660-a7b4-4247-ba8f-2589a39c0bbe",
              "parentUUID": "e625f073-8700-4934-88a7-3e042b60e055",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "deve retornar a lista de lojas bloqueadas por determinação legal devido ao COVID19",
              "fullTitle": "VENDAS WEB deve retornar a lista de lojas bloqueadas por determinação legal devido ao COVID19",
              "timedOut": null,
              "duration": 0,
              "state": "skipped",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.lojasBloqueadasCovid(TokenPortalInterno).then(res => {\n  expect(res.body.length).to.exist;\n  expect(res.status).to.be.equal(200);\n});",
              "err": {},
              "uuid": "6fe62b5e-d2ca-4cf8-8826-93a28f47a21d",
              "parentUUID": "e625f073-8700-4934-88a7-3e042b60e055",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "deve recuperar uma lista paginada de produto do vendas web de uma campanha especifica",
              "fullTitle": "VENDAS WEB deve recuperar uma lista paginada de produto do vendas web de uma campanha especifica",
              "timedOut": null,
              "duration": 0,
              "state": "skipped",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.recuperaVendaCampanhaEspecifica(TokenPortalInterno).then(res => {\n  expect(res.body.Total).to.exist;\n  expect(res.body.Registros.length).to.exist;\n  expect(res.status).to.be.equal(200);\n});",
              "err": {},
              "uuid": "fb410a8c-dbba-461c-88b6-a74fd68045b8",
              "parentUUID": "e625f073-8700-4934-88a7-3e042b60e055",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "deve recuperar uma lista dos ultimos produtos visualizados pelo cliente autenticado",
              "fullTitle": "VENDAS WEB deve recuperar uma lista dos ultimos produtos visualizados pelo cliente autenticado",
              "timedOut": null,
              "duration": 0,
              "state": "skipped",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.retornaProdutosDoclienteAutenticado(TokenPortalInterno).then(res => {\n  expect(res.body.length).to.exist;\n  expect(res.status).to.be.equal(200);\n});",
              "err": {},
              "uuid": "f67d93ed-6ee4-45c3-9369-c8e845d0c29e",
              "parentUUID": "e625f073-8700-4934-88a7-3e042b60e055",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "deve recuperar uma lista dos ultimos produtos mais vendidos",
              "fullTitle": "VENDAS WEB deve recuperar uma lista dos ultimos produtos mais vendidos",
              "timedOut": null,
              "duration": 0,
              "state": "skipped",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.retornaProdutosMaisVendidos(TokenPortalInterno).then(res => {\n  expect(res.body.length).to.exist;\n  expect(res.status).to.be.equal(200);\n});",
              "err": {},
              "uuid": "7ce384e5-a3cf-4a36-88f7-2166fabf5eb2",
              "parentUUID": "e625f073-8700-4934-88a7-3e042b60e055",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "deve recuperar ultimos visualizados, mais vendidos, carrinho, favoritos e total favoritos para portal de serviço",
              "fullTitle": "VENDAS WEB deve recuperar ultimos visualizados, mais vendidos, carrinho, favoritos e total favoritos para portal de serviço",
              "timedOut": null,
              "duration": 0,
              "state": "skipped",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.retornaGeralPortalServicos(TokenPortalInterno).then(res => {\n  expect(res.body.TotalFavoritos).to.equal(null);\n  expect(res.body.Favoritos).to.equal(null);\n  expect(res.status).to.be.equal(200);\n});",
              "err": {},
              "uuid": "6ea1115d-ad5e-433c-b214-3e7dc5ecfb5b",
              "parentUUID": "e625f073-8700-4934-88a7-3e042b60e055",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "deve retornar uma lista de cidades em que o produto está disponivel",
              "fullTitle": "VENDAS WEB deve retornar uma lista de cidades em que o produto está disponivel",
              "timedOut": null,
              "duration": 0,
              "state": "skipped",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.retornaProdutoCidades(TokenPortalInterno).then(res => {\n  expect(res.body.Cidades.length).to.exist;\n  expect(res.status).to.be.equal(200);\n});",
              "err": {},
              "uuid": "22c96f0e-f2ff-4938-90cd-814fece45278",
              "parentUUID": "e625f073-8700-4934-88a7-3e042b60e055",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "deve buscar carrinho e seus itens atualizados",
              "fullTitle": "VENDAS WEB deve buscar carrinho e seus itens atualizados",
              "timedOut": null,
              "duration": 0,
              "state": "skipped",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.retornaCarrinho(TokenPortalInterno).then(res => {\n  expect(res.body.Codigo).to.exist;\n  expect(res.body.CodigoCliente).to.exist;\n  expect(res.body.TipoExpedicaoVendaWeb.Codigo).to.exist;\n  expect(res.body.TipoExpedicaoVendaWeb.Descricao).to.exist;\n  expect(res.status).to.be.equal(200);\n});",
              "err": {},
              "uuid": "3beb5a48-0aac-4742-9ab7-4ac3b0138bb3",
              "parentUUID": "e625f073-8700-4934-88a7-3e042b60e055",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "deve validar a autenticidade do carrinho do cliente",
              "fullTitle": "VENDAS WEB deve validar a autenticidade do carrinho do cliente",
              "timedOut": null,
              "duration": 0,
              "state": "skipped",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.validaCarrinho(TokenPortalInterno).then(res => {\n  expect(res.status).to.be.equal(200);\n});",
              "err": {},
              "uuid": "8e6d9c01-1650-4da3-a98b-932c30c51d61",
              "parentUUID": "e625f073-8700-4934-88a7-3e042b60e055",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "deve retornar o resumo do carrinho do cliente",
              "fullTitle": "VENDAS WEB deve retornar o resumo do carrinho do cliente",
              "timedOut": null,
              "duration": 0,
              "state": "skipped",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.resumoCarrinhoCliente(TokenPortalInterno).then(res => {\n  expect(res.body.Codigo).to.be.equal(res.body.Codigo);\n  expect(res.body.Itens.length).to.be.equal(res.body.Itens.length);\n  expect(res.status).to.be.equal(200);\n});",
              "err": {},
              "uuid": "bddf2d83-142a-4eff-ab88-93e68cae4c91",
              "parentUUID": "e625f073-8700-4934-88a7-3e042b60e055",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "deve inserir e remover um item no carrinho do cliente com o valor atualizado",
              "fullTitle": "VENDAS WEB deve inserir e remover um item no carrinho do cliente com o valor atualizado",
              "timedOut": null,
              "duration": 0,
              "state": "skipped",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.insereItemCarrinhoValorAtualizado(TokenPortalInterno).then(res => {\n  expect(res.status).to.be.equal(200);\n  cy.removeItemCarrinhocliente(TokenPortalInterno).then(res => {\n    expect(res.status).to.be.equal(200);\n  });\n});",
              "err": {},
              "uuid": "9639399f-1836-4cab-b342-8d38385486d9",
              "parentUUID": "e625f073-8700-4934-88a7-3e042b60e055",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "deve recuperar uma lista com as formas de apgamentos disponiveis para pagamento em fatura",
              "fullTitle": "VENDAS WEB deve recuperar uma lista com as formas de apgamentos disponiveis para pagamento em fatura",
              "timedOut": null,
              "duration": 0,
              "state": "skipped",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.recuperaFormaPagamentoFatura(TokenPortalInterno).then(res => {\n  expect(res.body.PagamentoEmDinheiro).to.exist;\n  expect(res.body.PagamentoEmCartao).to.exist;\n  expect(res.body.PagamentoEmFatura).to.exist;\n  expect(res.status).to.be.equal(200);\n});",
              "err": {},
              "uuid": "6828367c-36be-4deb-928a-b0c22597f9c1",
              "parentUUID": "e625f073-8700-4934-88a7-3e042b60e055",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "deve retornar daados para grafico de cotação x venda web",
              "fullTitle": "VENDAS WEB deve retornar daados para grafico de cotação x venda web",
              "timedOut": null,
              "duration": 0,
              "state": "skipped",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.graficoCotacaoVendaWeb(TokenIntApp).then(res => {\n  expect(res.body.TotalClientesCotamENaoCompram).to.exist;\n  expect(res.body.PercentualClientesCotamENaoCompram).to.exist;\n  expect(res.body.TotalClientesCotamECompram).to.exist;\n  expect(res.body.PercentualClientesCotamECompram).to.exist;\n  expect(res.body.TotalClientesNaoCotaram).to.exist;\n  expect(res.body.PercentualClientesNaoCotaram).to.exist;\n  expect(res.status).to.be.equal(200);\n});",
              "err": {},
              "uuid": "93f152f8-7522-4f21-b2c4-7a45f6affb9a",
              "parentUUID": "e625f073-8700-4934-88a7-3e042b60e055",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "deve solicitar acesso ao portal do cliente",
              "fullTitle": "VENDAS WEB deve solicitar acesso ao portal do cliente",
              "timedOut": null,
              "duration": 0,
              "state": "skipped",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.solicitarAcessoPortalcliente(TokenIntApp).then(res => {\n  expect(res.body.Nome).to.be.equal('Tester Qa');\n  expect(res.body.Email).to.be.equal('luanderson.santos@autoglass.com.br');\n  expect(res.body.Cnpj).to.be.equal('05040968000165');\n  expect(res.body.Telefone).to.be.equal('27900000000');\n  expect(res.body.TipoNegocio).to.be.equal('Associação Qa');\n  expect(res.status).to.be.equal(200);\n});",
              "err": {},
              "uuid": "1657bea1-e43f-4167-be9d-04012b6e3ae2",
              "parentUUID": "e625f073-8700-4934-88a7-3e042b60e055",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "deve validar se o cnpj existe na base de dados",
              "fullTitle": "VENDAS WEB deve validar se o cnpj existe na base de dados",
              "timedOut": null,
              "duration": 0,
              "state": "skipped",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.validaCnpj().then(res => {\n  expect(res.body).to.be.equal(true);\n  expect(res.status).to.be.equal(200);\n});",
              "err": {},
              "uuid": "8f4ccea3-d701-40b3-a73f-fa6735805e00",
              "parentUUID": "e625f073-8700-4934-88a7-3e042b60e055",
              "isHook": false,
              "skipped": true
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "27137e6f-164b-4eb9-8b09-493e0d2184aa"
          ],
          "pending": [],
          "skipped": [
            "ed77c87b-9a56-4147-b83b-2898ff0740b9",
            "00ee810b-757a-45a8-9ad5-4a3bfb39e54c",
            "72887a67-9e31-4339-b474-b90b81bde906",
            "60856bff-d3fb-4641-8892-bec63ae29d17",
            "abec0660-a7b4-4247-ba8f-2589a39c0bbe",
            "6fe62b5e-d2ca-4cf8-8826-93a28f47a21d",
            "fb410a8c-dbba-461c-88b6-a74fd68045b8",
            "f67d93ed-6ee4-45c3-9369-c8e845d0c29e",
            "7ce384e5-a3cf-4a36-88f7-2166fabf5eb2",
            "6ea1115d-ad5e-433c-b214-3e7dc5ecfb5b",
            "22c96f0e-f2ff-4938-90cd-814fece45278",
            "3beb5a48-0aac-4742-9ab7-4ac3b0138bb3",
            "8e6d9c01-1650-4da3-a98b-932c30c51d61",
            "bddf2d83-142a-4eff-ab88-93e68cae4c91",
            "9639399f-1836-4cab-b342-8d38385486d9",
            "6828367c-36be-4deb-928a-b0c22597f9c1",
            "93f152f8-7522-4f21-b2c4-7a45f6affb9a",
            "1657bea1-e43f-4167-be9d-04012b6e3ae2",
            "8f4ccea3-d701-40b3-a73f-fa6735805e00"
          ],
          "duration": 213239,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "cc31c383-443f-4edf-9028-4b19c0722664",
      "title": "",
      "fullFile": "vendas/specs/vendas.spec.js",
      "file": "vendas/specs/vendas.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "1c3a71dc-9c71-4d76-8a5d-711f0e8a23d4",
          "title": "VENDAS",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "deve fechar uma venda",
              "fullTitle": "VENDAS deve fechar uma venda",
              "timedOut": null,
              "duration": 904,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.fechaVenda(TokenIntApp).then(res => {\n  expect(res.body).to.be.equal(true);\n  expect(res.status).to.be.equal(200);\n});",
              "err": {},
              "uuid": "2cf0b8aa-8616-4524-88fb-df43de85cab8",
              "parentUUID": "1c3a71dc-9c71-4d76-8a5d-711f0e8a23d4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "deve retornar saldo em cartão para crédito ou débito",
              "fullTitle": "VENDAS deve retornar saldo em cartão para crédito ou débito",
              "timedOut": null,
              "duration": 245,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.retornaSaldoDebECred(TokenIntApp).then(res => {\n  expect(res.body).to.be.equal(null);\n  expect(res.status).to.be.equal(200);\n});",
              "err": {},
              "uuid": "460f230a-02fd-45bb-910e-4aa2b83c1c62",
              "parentUUID": "1c3a71dc-9c71-4d76-8a5d-711f0e8a23d4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "deve buscar as formas de pagamento habilitadas para a venda",
              "fullTitle": "VENDAS deve buscar as formas de pagamento habilitadas para a venda",
              "timedOut": null,
              "duration": 313,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.getFormasPagamentoHabilitadasPraVenda(TokenIntApp).then(res => {\n  expect(res.body).to.exist;\n  expect(res.status).to.be.equal(200);\n});",
              "err": {},
              "uuid": "39556500-672f-491c-adf7-5db18a045f7b",
              "parentUUID": "1c3a71dc-9c71-4d76-8a5d-711f0e8a23d4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "deve criar um pagamento",
              "fullTitle": "VENDAS deve criar um pagamento",
              "timedOut": null,
              "duration": 379,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.criaPagamento(TokenIntApp).then(res => {\n  expect(res.status).to.be.equal(201);\n});",
              "err": {},
              "uuid": "797fdd93-8fc6-443a-9537-9bac288978fc",
              "parentUUID": "1c3a71dc-9c71-4d76-8a5d-711f0e8a23d4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "deve listar os pagamentos de uma venda",
              "fullTitle": "VENDAS deve listar os pagamentos de uma venda",
              "timedOut": null,
              "duration": 410,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.getListaPagamentoVenda(TokenIntApp).then(res => {\n  expect(res.body.length).to.exist;\n  expect(res.status).to.be.equal(200);\n});",
              "err": {},
              "uuid": "81fd62e7-6a5d-4ef3-88a9-59ac703a602f",
              "parentUUID": "1c3a71dc-9c71-4d76-8a5d-711f0e8a23d4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "deve buscar as negociações de uma venda",
              "fullTitle": "VENDAS deve buscar as negociações de uma venda",
              "timedOut": null,
              "duration": 188,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.getVendaNegociacao(TokenIntApp).then(res => {\n  expect(res.body).to.exist;\n  expect(res.status).to.be.equal(200);\n});",
              "err": {},
              "uuid": "1c400ffe-8e0f-489c-90c2-7b9ab67cd754",
              "parentUUID": "1c3a71dc-9c71-4d76-8a5d-711f0e8a23d4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "deve validar a negociação e a cria se não existe",
              "fullTitle": "VENDAS deve validar a negociação e a cria se não existe",
              "timedOut": null,
              "duration": 258,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.validaNegociacao(TokenIntApp).then(res => {\n  expect(res.body).to.exist;\n  expect(res.status).to.be.equal(200);\n});",
              "err": {},
              "uuid": "f9b6a974-8982-48ea-b917-5be85174a52f",
              "parentUUID": "1c3a71dc-9c71-4d76-8a5d-711f0e8a23d4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "deve recuperar uma venda",
              "fullTitle": "VENDAS deve recuperar uma venda",
              "timedOut": null,
              "duration": 332,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.recuperaVenda(TokenIntApp).then(res => {\n  expect(res.body.Codigo).to.exist;\n  expect(res.body.CodigoCliente).to.exist;\n  expect(res.body.Itens[0].CodigoProduto).to.exist;\n  expect(res.body.Itens[0].Descricao).to.exist;\n  expect(res.body.Itens[0].Quantidade).to.exist;\n  expect(res.body.Itens[0].Valor).to.exist;\n  expect(res.status).to.be.equal(200);\n});",
              "err": {},
              "uuid": "2ffe56e8-0036-4ebb-b85d-bd15deb49b7c",
              "parentUUID": "1c3a71dc-9c71-4d76-8a5d-711f0e8a23d4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "deve retornar o saldo restante de uma venda",
              "fullTitle": "VENDAS deve retornar o saldo restante de uma venda",
              "timedOut": null,
              "duration": 164,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.verSaldoDeVenda(TokenIntApp).then(res => {\n  expect(res.body).to.exist;\n  expect(res.status).to.be.equal(200);\n});",
              "err": {},
              "uuid": "7499ba10-395d-49e0-90a8-27d98dc2afc1",
              "parentUUID": "1c3a71dc-9c71-4d76-8a5d-711f0e8a23d4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "deve recuperar venda pela OS",
              "fullTitle": "VENDAS deve recuperar venda pela OS",
              "timedOut": null,
              "duration": 210,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.recuperaVendaOS(TokenIntApp).then(res => {\n  expect(res.body.Codigo).to.be.equal(20854);\n  expect(res.body.CodigoOrdemServico).to.be.equal(168297);\n  expect(res.body.CodigoEmpresa).to.be.equal(37);\n  expect(res.body.CodigoCliente).to.be.equal(272749);\n  expect(res.body.CnpjEmpresa).to.be.equal('07571746000102');\n  expect(res.status).to.be.equal(200);\n});",
              "err": {},
              "uuid": "f345713a-d419-42e0-b20b-b4bce397370e",
              "parentUUID": "1c3a71dc-9c71-4d76-8a5d-711f0e8a23d4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "deve recuperar o pagamento de uma venda pelo código da venda e da empresa",
              "fullTitle": "VENDAS deve recuperar o pagamento de uma venda pelo código da venda e da empresa",
              "timedOut": null,
              "duration": 193,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.recuperaPagamentocodigo(TokenIntApp).then(res => {\n  expect(res.body).to.exist;\n  expect(res.status).to.be.equal(200);\n});",
              "err": {},
              "uuid": "01e69835-b6ff-4f14-abb1-02c2b6b2a09d",
              "parentUUID": "1c3a71dc-9c71-4d76-8a5d-711f0e8a23d4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "deve validar os dados do cheque",
              "fullTitle": "VENDAS deve validar os dados do cheque",
              "timedOut": null,
              "duration": 159,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.validaCheque(TokenIntApp).then(res => {\n  expect(res.body.Valido).to.be.equal(true);\n  expect(res.body.Mensagem).to.be.equal('');\n  expect(res.status).to.be.equal(200);\n});",
              "err": {},
              "uuid": "5298fe5e-2792-43a4-a0f8-6f3479b42690",
              "parentUUID": "1c3a71dc-9c71-4d76-8a5d-711f0e8a23d4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "deve verificar se existe alguma cobrança para a venda",
              "fullTitle": "VENDAS deve verificar se existe alguma cobrança para a venda",
              "timedOut": null,
              "duration": 213,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.verificaCobrancaDeVenda(TokenIntApp).then(res => {\n  expect(res.body).to.be.equal(false);\n  expect(res.status).to.be.equal(200);\n});",
              "err": {},
              "uuid": "08a89a44-9ac8-44ee-8614-fd74ad678ce7",
              "parentUUID": "1c3a71dc-9c71-4d76-8a5d-711f0e8a23d4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "deve recuperar o total de demanda de venda",
              "fullTitle": "VENDAS deve recuperar o total de demanda de venda",
              "timedOut": null,
              "duration": 276,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.recuperaDemandaVenda(TokenIntApp).then(res => {\n  expect(res.body.QuantidadeDemanda).to.be.equal(0);\n  expect(res.status).to.be.equal(200);\n});",
              "err": {},
              "uuid": "bb9725ff-3da0-41ae-8f41-1f50f9a4ce2d",
              "parentUUID": "1c3a71dc-9c71-4d76-8a5d-711f0e8a23d4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "deve retornar lista de clientes",
              "fullTitle": "VENDAS deve retornar lista de clientes",
              "timedOut": null,
              "duration": 211,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.localizaClientes(TokenIntApp).then(res => {\n  expect(res.body.length).to.exist;\n  expect(res.status).to.be.equal(200);\n});",
              "err": {},
              "uuid": "f864434a-1ce4-49ae-a5e0-3420c9523523",
              "parentUUID": "1c3a71dc-9c71-4d76-8a5d-711f0e8a23d4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "deve retornar lista de clientes que compraram para-brisa ou realização de cristalização há 3 meses",
              "fullTitle": "VENDAS deve retornar lista de clientes que compraram para-brisa ou realização de cristalização há 3 meses",
              "timedOut": null,
              "duration": 1197,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.getClientesQueCompraramParaBrisa(TokenIntApp).then(res => {\n  expect(res.body.length).to.exist;\n  expect(res.status).to.be.equal(200);\n});",
              "err": {},
              "uuid": "f0324cc3-c26a-4e71-91cf-47f1b48cef68",
              "parentUUID": "1c3a71dc-9c71-4d76-8a5d-711f0e8a23d4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "deve retornar lista de cliente que compraram higienização de ar condicionado há 6 meses",
              "fullTitle": "VENDAS deve retornar lista de cliente que compraram higienização de ar condicionado há 6 meses",
              "timedOut": null,
              "duration": 888,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.getClientesQueCompraramHigienizacao(TokenIntApp).then(res => {\n  expect(res.body.length).to.exist;\n  expect(res.status).to.be.equal(200);\n});",
              "err": {},
              "uuid": "4325496c-58e1-471b-97cb-e3cac742d621",
              "parentUUID": "1c3a71dc-9c71-4d76-8a5d-711f0e8a23d4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "deve listar os clientes que compraram farol ou realização de polimento há 1 ano",
              "fullTitle": "VENDAS deve listar os clientes que compraram farol ou realização de polimento há 1 ano",
              "timedOut": null,
              "duration": 704,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.getClientesQueCompraramFarol(TokenIntApp).then(res => {\n  expect(res.body.length).to.exist;\n  expect(res.status).to.be.equal(200);\n});",
              "err": {},
              "uuid": "7391dd0a-2068-4198-88f5-53dee1229478",
              "parentUUID": "1c3a71dc-9c71-4d76-8a5d-711f0e8a23d4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "deve listar os clientes que compraram farol ou realização de polimento há 1 ano",
              "fullTitle": "VENDAS deve listar os clientes que compraram farol ou realização de polimento há 1 ano",
              "timedOut": null,
              "duration": 724,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.getClientesQueCompraramFarolCliPalheta(TokenIntApp).then(res => {\n  expect(res.body.length).to.exist;\n  expect(res.status).to.be.equal(200);\n});",
              "err": {},
              "uuid": "431ab351-a9a1-418f-a02f-45cad8bf9afb",
              "parentUUID": "1c3a71dc-9c71-4d76-8a5d-711f0e8a23d4",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "2cf0b8aa-8616-4524-88fb-df43de85cab8",
            "460f230a-02fd-45bb-910e-4aa2b83c1c62",
            "39556500-672f-491c-adf7-5db18a045f7b",
            "797fdd93-8fc6-443a-9537-9bac288978fc",
            "81fd62e7-6a5d-4ef3-88a9-59ac703a602f",
            "1c400ffe-8e0f-489c-90c2-7b9ab67cd754",
            "f9b6a974-8982-48ea-b917-5be85174a52f",
            "2ffe56e8-0036-4ebb-b85d-bd15deb49b7c",
            "7499ba10-395d-49e0-90a8-27d98dc2afc1",
            "f345713a-d419-42e0-b20b-b4bce397370e",
            "01e69835-b6ff-4f14-abb1-02c2b6b2a09d",
            "5298fe5e-2792-43a4-a0f8-6f3479b42690",
            "08a89a44-9ac8-44ee-8614-fd74ad678ce7",
            "bb9725ff-3da0-41ae-8f41-1f50f9a4ce2d",
            "f864434a-1ce4-49ae-a5e0-3420c9523523",
            "f0324cc3-c26a-4e71-91cf-47f1b48cef68",
            "4325496c-58e1-471b-97cb-e3cac742d621",
            "7391dd0a-2068-4198-88f5-53dee1229478",
            "431ab351-a9a1-418f-a02f-45cad8bf9afb"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 7968,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "676e4d2f-7880-4f4a-933c-80d92d85947d",
      "title": "",
      "fullFile": "vendawebhotsites/specs/vendaWebHotSite.spec.js",
      "file": "vendawebhotsites/specs/vendaWebHotSite.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "c8ccb45a-8444-4726-9dc3-aad5c53e5d62",
          "title": "VENDA WEB HOTSITE",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "deve recuperar um determinado hotsite pelo código",
              "fullTitle": "VENDA WEB HOTSITE deve recuperar um determinado hotsite pelo código",
              "timedOut": null,
              "duration": 3268,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.recuperaHotSite(TokenIntApp).then(res => {\n  expect(res.body.CodigoHotSite).to.be.equal(250);\n  expect(res.body.UsuarioCadastro.Codigo).to.be.equal(10780);\n  expect(res.body.UsuarioCadastro.Descricao).to.be.equal('THALYA DA SILVA MARCELINO');\n  expect(res.body.UsuarioAlteracao.Codigo).to.be.equal(10780);\n  expect(res.body.UsuarioAlteracao.Descricao).to.be.equal('THALYA DA SILVA MARCELINO');\n  expect(res.body.Campanha.Codigo).to.be.equal(1790);\n  expect(res.body.Campanha.Descricao).to.be.equal('Landing Page - Outubro');\n  expect(res.body.Produtos.length).to.be.equal(62);\n  expect(res.status).to.be.equal(200);\n});",
              "err": {},
              "uuid": "f9878cb8-b9c5-4648-97e9-aed6c3d36aad",
              "parentUUID": "c8ccb45a-8444-4726-9dc3-aad5c53e5d62",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "deve duplicar um HotSite e seus produtos",
              "fullTitle": "VENDA WEB HOTSITE deve duplicar um HotSite e seus produtos",
              "timedOut": null,
              "duration": 6101,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.duplicaHotSiteProdutos(TokenIntApp).then(res => {\n  expect(res.body.UsuarioCadastro.Codigo).to.be.equal(8229);\n  expect(res.body.UsuarioCadastro.Descricao).to.be.equal('TI - EQUIPE DE QUALIDADE');\n  expect(res.body.Produtos.length).to.be.equal(62);\n  expect(res.status).to.be.equal(200);\n});",
              "err": {},
              "uuid": "58ba7d59-675e-4d96-be4e-cea37ced6945",
              "parentUUID": "c8ccb45a-8444-4726-9dc3-aad5c53e5d62",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "deve excluir um determinado HotSite",
              "fullTitle": "VENDA WEB HOTSITE deve excluir um determinado HotSite",
              "timedOut": null,
              "duration": 847,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.InsereHotSiteProdutos(TokenWebApp).then(res => {\n  cy.excluiHotSite(TokenWebApp, res).then(res1 => {\n    expect(res1.body).to.be.equal('');\n    expect(res1.status).to.be.equal(200);\n  });\n});",
              "err": {},
              "uuid": "9fe563ba-a9c5-4d2b-9be5-e80ca6ad8fd7",
              "parentUUID": "c8ccb45a-8444-4726-9dc3-aad5c53e5d62",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "deve recuperar um determinado produto pelo código",
              "fullTitle": "VENDA WEB HOTSITE deve recuperar um determinado produto pelo código",
              "timedOut": null,
              "duration": 304,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.recuperaProdutoCodigo(TokenWebApp).then(res => {\n  expect(res.body.CodigoHotSiteProduto).to.be.equal(11);\n  expect(res.body.CodigoProdutoOriginal).to.be.equal(421080);\n  expect(res.body.UsuarioCadastro.Codigo).to.be.equal(10629);\n  expect(res.body.UsuarioCadastro.Descricao).to.be.equal('LORENZA DEMUNER MATTEDI');\n  expect(res.body.Descricao).to.be.equal('ESPELHO RETROVISOR - COROLLA - 09/14 - ELÉTRICO - COM BASE DE PLÁSTICO - PISCA LED E RETRAIL - LADO DIREITO - METAGAL');\n  expect(res.status).to.be.equal(200);\n});",
              "err": {},
              "uuid": "18cf8d4f-f5a1-493a-974c-cafbe723e1d6",
              "parentUUID": "c8ccb45a-8444-4726-9dc3-aad5c53e5d62",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "deve atualiza um determinado produto",
              "fullTitle": "VENDA WEB HOTSITE deve atualiza um determinado produto",
              "timedOut": null,
              "duration": 295,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.alteraProduto(TokenIntApp).then(res => {\n  expect(res.body.CodigoHotSiteProduto).to.be.equal(27);\n  expect(res.body.CodigoProdutoOriginal).to.be.equal(460175);\n  expect(res.body.UsuarioCadastro.Codigo).to.be.equal(10629);\n  expect(res.body.UsuarioCadastro.Descricao).to.be.equal('LORENZA DEMUNER MATTEDI');\n  expect(res.body.UsuarioAlteracao.Codigo).to.be.equal(8229);\n  expect(res.body.UsuarioAlteracao.Descricao).to.be.equal('TI - EQUIPE DE QUALIDADE');\n});",
              "err": {},
              "uuid": "467cbb4a-0f46-41f3-bf71-f7434e961c91",
              "parentUUID": "c8ccb45a-8444-4726-9dc3-aad5c53e5d62",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f9878cb8-b9c5-4648-97e9-aed6c3d36aad",
            "58ba7d59-675e-4d96-be4e-cea37ced6945",
            "9fe563ba-a9c5-4d2b-9be5-e80ca6ad8fd7",
            "18cf8d4f-f5a1-493a-974c-cafbe723e1d6",
            "467cbb4a-0f46-41f3-bf71-f7434e961c91"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 10815,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "9b185b01-11a1-4740-a131-8f7bda815515",
      "title": "",
      "fullFile": "vendedor/specs/vendedor.spec.js",
      "file": "vendedor/specs/vendedor.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "1a922a4b-9e1b-410c-8faa-662c4af7886b",
          "title": "VENDEDOR",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "deve listar todos os vendedores",
              "fullTitle": "VENDEDOR deve listar todos os vendedores",
              "timedOut": null,
              "duration": 778,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.listaTodosVendedores(TokenIntApp).then(res => {\n  expect(res.body.length).to.exist;\n  expect(res.status).to.be.equal(200);\n});",
              "err": {},
              "uuid": "bf09a0ab-473d-4981-abc6-e782bcc75f32",
              "parentUUID": "1a922a4b-9e1b-410c-8faa-662c4af7886b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "deve listar as equipes dos vendedores atacado",
              "fullTitle": "VENDEDOR deve listar as equipes dos vendedores atacado",
              "timedOut": null,
              "duration": 221,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.listaEquipesVendedoresAtacado(TokenIntApp).then(res => {\n  expect(res.body.length).to.exist;\n  expect(res.status).to.be.equal(200);\n});",
              "err": {},
              "uuid": "4698e6b2-c68d-4221-b9b7-1a4de3c6b803",
              "parentUUID": "1a922a4b-9e1b-410c-8faa-662c4af7886b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "deve listar todas as equipes de venda",
              "fullTitle": "VENDEDOR deve listar todas as equipes de venda",
              "timedOut": null,
              "duration": 255,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.listaEquipesVenda(TokenIntApp).then(res => {\n  expect(res.body.length).to.exist;\n  expect(res.status).to.be.equal(200);\n});",
              "err": {},
              "uuid": "3307c94f-6f12-43e1-b6ce-730adea4b8b5",
              "parentUUID": "1a922a4b-9e1b-410c-8faa-662c4af7886b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "deve listar vendedores de uma determinada venda",
              "fullTitle": "VENDEDOR deve listar vendedores de uma determinada venda",
              "timedOut": null,
              "duration": 194,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.listaVendedoresVenda(TokenIntApp).then(res => {\n  expect(res.body.length).to.exist;\n  expect(res.status).to.be.equal(200);\n});",
              "err": {},
              "uuid": "0815a9d4-2c3e-44e8-90cb-3e915f913a5f",
              "parentUUID": "1a922a4b-9e1b-410c-8faa-662c4af7886b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "deve listar vendedores que podem ser adicionados a venda",
              "fullTitle": "VENDEDOR deve listar vendedores que podem ser adicionados a venda",
              "timedOut": null,
              "duration": 641,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.listaVendedoresAdiconadosAvenda(TokenIntApp).then(res => {\n  expect(res.body.length).is.not.equal(0);\n  expect(res.body.length).to.be.exist;\n  expect(res.status).to.be.equal(200);\n});",
              "err": {},
              "uuid": "30815a86-67a7-4965-9c33-801b3d5d354d",
              "parentUUID": "1a922a4b-9e1b-410c-8faa-662c4af7886b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "bf09a0ab-473d-4981-abc6-e782bcc75f32",
            "4698e6b2-c68d-4221-b9b7-1a4de3c6b803",
            "3307c94f-6f12-43e1-b6ce-730adea4b8b5",
            "0815a9d4-2c3e-44e8-90cb-3e915f913a5f",
            "30815a86-67a7-4965-9c33-801b3d5d354d"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2089,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.0.1"
    },
    "marge": {
      "options": {
        "reportDir": "/var/www/html/vendas-api/separate-reports",
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.0.1"
    }
  }
}